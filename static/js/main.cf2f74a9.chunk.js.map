{"version":3,"sources":["components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.js","components/Content/Messenger/Messenger.module.css","redux/authReducer.js","App.module.css","components/Navbar/Navbar.module.css","components/Content/Content.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/common/FormsControls/FormsControls.module.css","assets/images/defaultAvatar.png","redux/messengerPageReducer.js","utils/validators/validators.js","utils/objectHelpers.js","redux/usersPageReducer.js","components/common/Preloader/Preloader.module.css","redux/appReducer.js","api/api.js","components/Navbar/Navbar.jsx","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","assets/images/Spinner-1s-200px.svg","components/common/Preloader/Preloader.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","redux/profilePageReducer.js","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx","components/Content/Login/Login.jsx","components/Content/Login/LoginContainer.jsx","components/Content/Content.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","redux/sidebarReducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Element","input","meta","props","hasError","submitError","touched","error","className","s","formControl","Textarea","Input","SET_USER","SET_CAPTCHA","initialState","id","email","login","isAuth","captchaURL","setAuthUserData","type","payload","getAuthUserData","dispatch","a","toggleFetching","authAPI","me","response","data","resultCode","logIn","password","rememberMe","captcha","getCaptchaUrl","FORM_ERROR","messages","logOut","securityAPI","getCaptchaURL","url","authReducer","state","action","ADD_MESSAGE","dialogsData","name","messagesData","message","addMessage","newMessageText","messengerPageReducer","newMessage","length","composeValidators","validators","value","reduce","validator","undefined","required","maxLength","max","minLength","min","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_FOLLOWING","FAKE","users","totalUsersCount","usersOnPage","currentPage","followingInProgress","fake","followAC","userId","unfollowAC","setCurrentPage","toggleFollowing","following","requestUsers","page","usersAPI","getUsers","totalCount","followUnfollowFlow","APIMethod","actionCreator","unfollowUser","bind","followUser","usersPageReducer","followed","filter","INITIALIZED_SUCCESS","initialized","isFetching","initializeApp","promise","Promise","all","then","appReducer","instance","axios","create","baseURL","withCredentials","headers","get","delete","post","getProfile","authId","console","warn","profileAPI","getUserStatus","updateUserStatus","status","put","updatePhoto","photo","formData","FormData","append","updateProfileData","contacts","Navbar","nav","to","activeClassName","active","ProfileStatus","React","useState","editMode","setEditMode","setStatus","useEffect","statusInputBlock","onChange","e","currentTarget","autoFocus","onBlur","statusBlock","onDoubleClick","Preloader","alt","preloader","src","ProfileDataItem","dataType","dataValue","profileDataItem","profileDataItem_type","profileDataItem_value","component","placeholder","validate","ProfileData","userProfile","isOwner","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactsBlock","Object","keys","k","ProfileDataForm","exitEditMode","initialValues","onSubmit","render","handleSubmit","hasValidationErrors","submitting","pristine","disabled","val","String","ProfileInfo","profileMainBlock","profileAvatarBlock","profileAvatar","photos","small","defaultAvatar","target","files","profileDataBlock","profileStatusBlock","ADD_POST","DELETE_POST","SET_USER_PROFILE_DATA","SET_STATUS","SET_PROFILE_PHOTO","large","postsData","likesCount","setUserProfileData","setUserStatus","statusText","getUserProfile","profilePageReducer","newPost","newPostText","p","Post","avatar","postText","MyPosts","memo","postsElements","posts","slice","reverse","postsBlock","addPost","AddPostForm","form","values","textareaBlock","connect","profilePage","Profile","profileInfoBlock","MyPostsContainer","ProfileContainer","this","match","params","history","push","refreshProfile","prevProps","prevState","snapshots","Component","compose","auth","alert","errorsObj","m","errorMessage","split","replace","toLowerCase","withRouter","LoginForm","reset","correct","buttonBlock","Login","LoginContainer","MessengerContainer","lazy","UsersContainer","News","Music","Settings","Content","appWrapperContent","contentHeadImage","dynamicContent","Suspense","fallback","exact","from","path","Header","header","headerImg","loginBlock","HeaderContainer","App","catchAllUnhandledErrors","reason","window","addEventListener","removeEventListener","appWrapper","block","navbar","content","app","sidebarReducer","reducers","combineReducers","messengerPage","usersPage","sidebar","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cf2f74a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMainBlock\":\"ProfileInfo_profileMainBlock__2mhcL\",\"profileAvatarBlock\":\"ProfileInfo_profileAvatarBlock__2oVcg\",\"profileAvatar\":\"ProfileInfo_profileAvatar__11Krx\",\"profileDataBlock\":\"ProfileInfo_profileDataBlock__2lCIC\",\"profileStatusBlock\":\"ProfileInfo_profileStatusBlock__24DQD\",\"profileDataItem\":\"ProfileInfo_profileDataItem__xfKPe\",\"profileDataItem_value\":\"ProfileInfo_profileDataItem_value__2Gs6S\",\"contactsBlock\":\"ProfileInfo_contactsBlock__91rpb\",\"profileDataItem_type\":\"ProfileInfo_profileDataItem_type__2k8vY\"};","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\n// Первый метод\r\n// const FormControl = ({input, meta, ...props}) => {\r\n//     const hasError = meta.error && meta.touched\r\n//     // debugger\r\n//     return (\r\n//         <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n//             <div>\r\n//                 {props.children}\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Textarea = props => {\r\n//     const {input, meta, ...restProps} = props\r\n//     debugger\r\n//     return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n//           }\r\n//\r\n// export const Input = props => {\r\n//     const {input, meta,  ...restProps} = props\r\n//     return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n// Второй метод\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.submitError || (meta.touched && meta.error)\r\n    return (\r\n        <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n            { hasError && <span> { meta.error || meta.submitError} </span> }\r\n            <Element {...input} {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = Element(\"textarea\")\r\nexport const Input = Element(\"input\")\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messenger_dialogs__3UwQV\",\"dialogsItems\":\"Messenger_dialogsItems__1EBxi\",\"messagesItems\":\"Messenger_messagesItems__20Dp5\",\"message\":\"Messenger_message__3fpq2\",\"newMessage\":\"Messenger_newMessage___84Py\",\"textareaBlock\":\"Messenger_textareaBlock__PARKv\",\"buttonBlock\":\"Messenger_buttonBlock__1yLvw\",\"submitError\":\"Messenger_submitError__3yqr2\"};","import { authAPI, securityAPI } from '../api/api'\r\nimport { FORM_ERROR } from 'final-form'\r\nimport { toggleFetching } from './appReducer'\r\nimport React from 'react'\r\n\r\nconst SET_USER = 'auth/SET_USER'\r\nconst SET_CAPTCHA = 'auth/SET_CAPTCHA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER:\r\n        case SET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER,\r\n    payload: { id, email, login, isAuth, captchaURL: null }\r\n})\r\nexport const setCaptcha = (captchaURL) => ({ type: SET_CAPTCHA, payload: { captchaURL } })\r\n\r\nexport const getAuthUserData = () => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        const { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const logIn = (email, password, rememberMe, captcha) => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await authAPI.logIn(email, password, rememberMe, captcha)\r\n    dispatch(toggleFetching(false))\r\n    // debugger\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        return { [FORM_ERROR]: response.data.messages[0] }\r\n    }\r\n\r\n}\r\n\r\nexport const logOut = () => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await authAPI.logOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const getCaptchaUrl = () => async dispatch => {\r\n    const response = await securityAPI.getCaptchaURL()\r\n    // debugger\r\n    dispatch(setCaptcha(response.data.url))\r\n}\r\n\r\nexport default authReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__yboJz\",\"block\":\"App_block__PeutB\",\"header\":\"App_header__2iIFd\",\"navbar\":\"App_navbar__39CPW\",\"content\":\"App_content__3zoXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1CPnx\",\"active\":\"Navbar_active__2oxIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapperContent\":\"Content_appWrapperContent__yDoLp\",\"contentHeadImage\":\"Content_contentHeadImage__3XBMn\",\"dynamicContent\":\"Content_dynamicContent__2I9rW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__WJfQt\",\"posts\":\"MyPosts_posts__2Rffb\",\"post\":\"MyPosts_post__vBcSb\",\"textareaBlock\":\"MyPosts_textareaBlock__sAX7I\",\"buttonBlock\":\"MyPosts_buttonBlock__3eRfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__334D8\",\"avatar\":\"Post_avatar__2UaWx\",\"postText\":\"Post_postText__3VQl_\",\"likesCounter\":\"Post_likesCounter__10VO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__S_AL9\",\"headerImg\":\"Header_headerImg__-IdV9\",\"loginBlock\":\"Header_loginBlock__kdbO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileStatus_statusBlock__LzKVV\",\"statusInputBlock\":\"ProfileStatus_statusInputBlock__35F80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__hjWRA\",\"error\":\"FormsControls_error__21DJK\"};","export default __webpack_public_path__ + \"static/media/defaultAvatar.031be920.png\";","let ADD_MESSAGE = 'messengerPage/ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n    {id: 1, name: \"Dimych\"},\r\n    {id: 2, name: \"Sasha\"},\r\n    {id: 3, name: \"Viktor\"},\r\n    {id: 4, name: \"Lena\"},\r\n    {id: 5, name: \"Misha\"},\r\n    {id: 6, name: \"Egor\"},\r\n    {id: 7, name: \"Sveta\"}\r\n  ],\r\n  messagesData: [\r\n    {id: 1, message: \"Hi !!!\"},\r\n    {id: 2, message: \"How are you ?\"},\r\n    {id: 4, message: \"Yo\"},\r\n    {id: 3, message: \"Yo yo\"},\r\n    {id: 5, message: \"Yo yo yo\"}\r\n  ],\r\n};\r\n\r\n\r\nconst messengerPageReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n\r\n     case ADD_MESSAGE:\r\n       let newMessage = {\r\n         id: state.messagesData.length + 1, //id counter imitation\r\n         message: action.newMessageText,\r\n       };\r\n       return {\r\n         ...state,\r\n         messagesData: [...state.messagesData, newMessage],\r\n       };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addMessage = newMessageText => ({type: ADD_MESSAGE, newMessageText});\r\n\r\nexport default messengerPageReducer;","export const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nexport const required = value =>\r\n    value\r\n        ? undefined\r\n        : 'Field is required'\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max\r\n        ? `Must be ${max} characters or less`\r\n        : undefined\r\n\r\nexport const minLength = min => value =>\r\n    value && (value.length < min)\r\n        ? `Must be ${min} characters or more`\r\n        : undefined\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => (\r\n    items.map(item =>\r\n        item[objPropName] === itemId\r\n            ? { ...item, ...newObjProps }\r\n            : item)\r\n)","import { usersAPI } from '../api/api'\r\nimport { toggleFetching } from './appReducer'\r\nimport { updateObjectInArray } from '../utils/objectHelpers'\r\n\r\nconst FOLLOW = 'usersPage/FOLLOW'\r\nconst UNFOLLOW = 'usersPage/UNFOLLOW'\r\nconst SET_USERS = 'usersPage/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'usersPage/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'usersPage/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_FOLLOWING = 'usersPage/TOGGLE_FOLLOWING'\r\nconst FAKE = 'usersPage/FAKE'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    usersOnPage: 20,\r\n    currentPage: 1,\r\n    followingInProgress: [],\r\n    fake: 0,\r\n}\r\nconst usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                // users: state.users.map(u => u.id === action.userId ? { ...u, followed: false } : u)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            // console.log(action.currentPage)\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount,\r\n            }\r\n\r\n        case TOGGLE_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.following\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\r\n            }\r\n        case FAKE:\r\n            return {\r\n                ...state,\r\n                fake: state.fake + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = userId => ({ type: FOLLOW, userId })\r\nexport const unfollowAC = userId => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = users => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = totalUsersCount => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\r\nexport const toggleFollowing = (following, id) => ({ type: TOGGLE_FOLLOWING, following, id })\r\n\r\nexport const requestUsers = (usersOnPage, page) => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await usersAPI.getUsers(usersOnPage, page)\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, APIMethod, actionCreator) => {\r\n    dispatch(toggleFollowing(true, userId)) // диспатчим в стор инфу, что начался запрос на сервер и id пользователя, по которому идет запрос\r\n    const response = await APIMethod(userId)// запускаем функцию DAL уровня\r\n    if (response.data.resultCode === 0) {  // получив ответ от сервера ... проверяем, что статус ОК\r\n        dispatch(actionCreator(userId)) // диспатчим в стор инфу что мы отписались\r\n        dispatch(toggleFollowing(false, userId)) // диспатчим в стор инфу что сейчвс к серверу идет запрос по юзеру с ID\r\n    }\r\n}\r\nexport const unfollowUser = userId => async dispatch => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowAC)\r\n}\r\nexport const followUser = userId => async dispatch => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followAC)\r\n}\r\n\r\nexport default usersPageReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1UWqk\"};","import { getAuthUserData } from './authReducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\nconst TOGGLE_FETCHING = 'app/TOGGLE_FETCHING'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    isFetching: true,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeSuccess = () => ({ type: INITIALIZED_SUCCESS} )\r\nexport const toggleFetching = isFetching => ({ type: TOGGLE_FETCHING, isFetching })\r\n\r\n\r\nexport const initializeApp = () => async dispatch => {\r\n    const promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => dispatch(initializeSuccess()))\r\n}\r\n\r\n// export const autoToggleFetching = (wrappedFunction, ...args) => {\r\n//     toggleFetching(true)\r\n//     toggleFetching(false)\r\n// }\r\n\r\n\r\nexport default appReducer\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '05f0dc87-f93b-4a11-b796-0fb78655f73d'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (usersOnPage = 10, currentPage = 1) =>\r\n        instance.get(`users?count=${usersOnPage}&page=${currentPage}`),\r\n    unfollowUser: userId =>\r\n        instance.delete(`follow/${userId}`),\r\n    followUser: userId =>\r\n        instance.post(`follow/${userId}`, {}),\r\n    getProfile (userId, authId) {\r\n        console.warn('Obsolete method\" Please profileAPI object')\r\n        return profileAPI.getProfile(userId, authId) // Для сохранения backward compatibility ставляем возможность использовать запросы сюда\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile: userId =>\r\n        instance.get(`profile/${userId}`),\r\n    getUserStatus: userId =>\r\n        instance.get(`profile/status/${userId}`),\r\n    updateUserStatus: status =>\r\n        instance.put(`profile/status`, { status: status }),\r\n    updatePhoto: photo => {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n        // debugger\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfileData: formData =>\r\n        instance.put(`profile`, { ...formData, ...formData.contacts }),\r\n}\r\n\r\nexport const authAPI = {\r\n    me: () =>\r\n        instance.get(`auth/me`),\r\n    logIn: (email, password, rememberMe, captcha = '') =>\r\n        instance.post(`auth/login`, { email, password, rememberMe, captcha }),\r\n    logOut: () =>\r\n        instance.delete(`auth/login`),\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL: () =>\r\n        instance.get('security/get-captcha-url'),\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div><NavLink to={'/profile'} activeClassName={s.active}>Profile</NavLink></div>\r\n            <div><NavLink to={'/messenger'} activeClassName={s.active}>Messenger</NavLink></div>\r\n            <div><NavLink to={'/users'} activeClassName={s.active}>Users</NavLink></div>\r\n            <div><NavLink to={'/news'} activeClassName={s.active}>News</NavLink></div>\r\n            <div><NavLink to={'/music'} activeClassName={s.active}>Music</NavLink></div>\r\n            <div><NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink></div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport s from './ProfileStatus.module.css'\r\n// import { createStore } from 'redux'\r\n\r\n/* Functional implementation with hooks */\r\nconst ProfileStatus = props => {\r\n    let [editMode, setEditMode] = React.useState(false)\r\n    let [status, setStatus] = React.useState(props.status)\r\n\r\n    React.useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if (props.authId === props.userId) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                editMode\r\n                    ? <div>\r\n                        <input\r\n                            className={s.statusInputBlock}\r\n                            onChange={onStatusChange}\r\n                            autoFocus={true}                                 /* автофокус на элементе */\r\n                            onBlur={deactivateEditMode}      /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст */\r\n                            value={status}\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                            <span\r\n                                className={s.statusBlock}\r\n                                onDoubleClick={activateEditMode}    /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст  */\r\n                            >\r\n                            {status || 'No status'}\r\n                            </span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatus\r\n\r\n/* Class implementation */\r\n// class ProfileStatus extends React.Component {\r\n//     state = {                           // локальный стэйт  классовой компоненты\r\n//         editMode: false,\r\n//         status: this.props.status,\r\n//     }\r\n//     activateEditMode = () => {\r\n//         if (this.props.authId === this.props.userId) {\r\n//             this.setState({           // метод Реакта изменяющий локальный стэйт классовой компоненты\r\n//                 editMode: true\r\n//             })\r\n//         }\r\n//     }\r\n//     deactivateEditMode = () => {\r\n//         this.setState({           // метод Реакта изменяющий локальный стэйт классовой компоненты\r\n//             editMode: false,\r\n//         })\r\n//         this.props.updateUserStatus(this.state.status)\r\n//     }\r\n//     onStatusChange = e => {\r\n//         this.setState({ status: e.currentTarget.value })\r\n//     }\r\n//\r\n//     componentDidUpdate (prevProps, prevState, snapshot) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render () {\r\n//         return (\r\n//             <div>\r\n//                 {this.state.editMode\r\n//                     ? <div>\r\n//                         <input\r\n//                             className={s.statusInputBlock}\r\n//                             onChange={this.onStatusChange}\r\n//                             autoFocus={true}                                 /* автофокус на элементе */\r\n//                             onBlur={this.deactivateEditMode}      /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст */\r\n//                             value={this.state.status}/>\r\n//                     </div>\r\n//                     : <div>\r\n//                         <span\r\n//                             className={s.statusBlock}\r\n//                             onDoubleClick={this.activateEditMode}    /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст  */\r\n//                         >\r\n//                             {this.props.status || 'No status'}\r\n//                         </span>\r\n//                     </div>\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n//\r\n// export default ProfileStatus\r\n\r\n","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.a77e97c8.svg\";","import React from 'react'\r\nimport s from './Preloader.module.css'\r\nimport preloader from '../../../assets/images/Spinner-1s-200px.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img alt='preloader' className={s.preloader} src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import s from './ProfileInfo.module.css'\r\nimport defaultAvatar from '../../../../assets/images/defaultAvatar.png'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\r\nimport React from 'react'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { composeValidators, required } from '../../../../utils/validators/validators'\r\nimport { Input } from '../../../common/FormsControls/FormsControls'\r\n\r\nconst ProfileInfo = ({ authId, userProfile, status, updateUserStatus, isOwner, updatePhoto, updateProfileData }) => {\r\n    let [editMode, setEditMode] = React.useState(false)\r\n\r\n    if (!userProfile.userId) {return <Preloader/>}\r\n\r\n    return (\r\n        <div className={s.profileMainBlock}>\r\n\r\n            {/* display and change Profile Photo block */}\r\n            <div className={s.profileAvatarBlock}>\r\n                <img className={s.profileAvatar} alt='userAvatar'\r\n                     src={userProfile.photos.small ? userProfile.photos.small : defaultAvatar}/>\r\n                {isOwner && <input type={'file'} onChange={e => updatePhoto(e.target.files[0])\r\n                }/>}\r\n            </div>\r\n\r\n            {/* display and change Profile Data block */}\r\n            <div className={s.profileDataBlock}>\r\n                {editMode\r\n                    ? <ProfileDataForm userProfile={userProfile} editMode={editMode} authId={authId}\r\n                                       exitEditMode={() => setEditMode(false)}\r\n                                       updateProfileData={updateProfileData}\r\n                    />\r\n                    : <ProfileData userProfile={userProfile} editMode={editMode} setEditMode={setEditMode}\r\n                                   isOwner={isOwner}\r\n                    />}\r\n            </div>\r\n\r\n\r\n            {/* display and change Profile Status block */}\r\n            <div className={s.profileStatusBlock}>\r\n                <ProfileStatus authId={authId} userId={userProfile.userId}\r\n                               status={status} updateUserStatus={updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileDataItem = ({ editMode, dataType, dataValue, name = '', type = 'text', validators = [] }) => {\r\n    return (\r\n        <div className={s.profileDataItem}>\r\n            <div className={s.profileDataItem_type}>\r\n                <b>{dataType + ': '}</b>\r\n            </div>\r\n            <div className={s.profileDataItem_value}>\r\n                {editMode\r\n                    ? <Field\r\n                        name={name}\r\n                        component={Input}\r\n                        type={type}\r\n                        placeholder={dataType}\r\n                        validate={composeValidators(...validators)}\r\n                    />\r\n                    : (dataValue || '-')}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nconst ProfileData = ({ userProfile, setEditMode, isOwner, editMode, }) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <button onClick={() => setEditMode(true)}>Edit Info</button>}\r\n            <ProfileDataItem editMode={editMode} dataType='Full name' dataValue={userProfile.fullName}/>\r\n            <ProfileDataItem editMode={editMode} dataType='ID' dataValue={userProfile.userId}/>\r\n            <ProfileDataItem editMode={editMode} dataType='About me' dataValue={userProfile.aboutMe}/>\r\n            <ProfileDataItem editMode={editMode} dataType='Looking for a job'\r\n                             dataValue={userProfile.lookingForAJob ? 'yes' : 'no'}/>\r\n            <ProfileDataItem editMode={editMode} dataType='My profs skills'\r\n                             dataValue={userProfile.lookingForAJobDescription}/>\r\n            <div><b>Contacts</b></div>\r\n            <div className={s.contactsBlock}> {Object.keys(userProfile.contacts).map(k =>\r\n                <ProfileDataItem editMode={editMode} dataType={k} dataValue={userProfile.contacts[k]} key={k}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileDataForm = ({ userProfile, editMode, authId, exitEditMode, updateProfileData }) => {\r\n    let initialValues = { ...userProfile, ...userProfile.contacts }\r\n    delete initialValues['photos']\r\n\r\n    const onSubmit = async formData => {\r\n        const response = await updateProfileData(formData)\r\n        if (response) return response\r\n        exitEditMode()\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            initialValues={initialValues}\r\n            render={({\r\n                submitError, handleSubmit, hasValidationErrors,\r\n                submitting, pristine,\r\n            }) => {\r\n\r\n                return (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <button type=\"submit\"\r\n                                disabled={submitting || pristine || hasValidationErrors}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                           <span>\r\n                               {submitError && (' ' + submitError) }\r\n                           </span>\r\n                        <ProfileDataItem editMode={editMode} dataType='Full name' dataValue={userProfile.fullName}\r\n                                         name='fullName' validators={[required]}/>\r\n\r\n                        <ProfileDataItem editMode={false} dataType='ID' dataValue={userProfile.userId} name='userId'\r\n                                         validators={[val => String(val) === String(authId) ? undefined : `ID is not ${authId}`]}/>\r\n\r\n                        <ProfileDataItem editMode={editMode} dataType='About me' dataValue={userProfile.aboutMe}\r\n                                         name='aboutMe' validators={[required]}/>\r\n\r\n                        <ProfileDataItem editMode={editMode} dataType='Looking for a job'\r\n                                         dataValue={userProfile.lookingForAJob ? 'yes' : 'no'}\r\n                                         name='lookingForAJob' type='checkbox'/>\r\n\r\n                        <ProfileDataItem editMode={editMode} dataType='My profs skills'\r\n                                         dataValue={userProfile.lookingForAJobDescription}\r\n                                         name='lookingForAJobDescription' validators={[required]}/>\r\n\r\n                        <div><b>Contacts</b></div>\r\n                        <div className={s.contactsBlock}> {Object.keys(userProfile.contacts).map(k =>\r\n                            <ProfileDataItem editMode={editMode} dataType={k} dataValue={userProfile.contacts[k]}\r\n                                             name={'contacts.' + k} key={k}/>)}\r\n                        </div>\r\n                    </form>\r\n                )\r\n            }\r\n            }\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n\r\n// const ProfileData = ({ userProfile, setEditMode, isOwner }) => {\r\n//     return (\r\n//         <div>\r\n//             {isOwner && <button onClick={() => setEditMode(true)}>Edit Info</button>}\r\n//             <ProfileDataItem dataType={'Full name'} dataValue={userProfile.fullName}/>\r\n//             <ProfileDataItem dataType={'ID'} dataValue={userProfile.userId}/>\r\n//             <ProfileDataItem dataType={'About me'} dataValue={userProfile.aboutMe}/>\r\n//             <ProfileDataItem dataType={'Looking for a job'} dataValue={userProfile.lookingForAJob ? 'yes' : 'no'}/>\r\n//             <ProfileDataItem dataType={'My profs skills'} dataValue={userProfile.lookingForAJobDescription}/>\r\n//             <div><b>Contacts</b></div>\r\n//             <div className={s.contactsBlock}> {Object.keys(userProfile.contacts).map(k =>\r\n//                 <ProfileDataItem dataType={k} key={k} dataValue={userProfile.contacts[k]}/>)}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// constcreateDataItem(= ({ dataType, dataValue }) => (\r\n//     <div className={s.profileDataItem}>\r\n//         <div className={s.profileDataItem_type}>\r\n//             <b>{dataType + ': '}</b>\r\n//         </div>\r\n//         <div className={s.profileDataItem_value}>\r\n//             {dataValue || '-'}\r\n//         </div>\r\n//     </div>)\r\n//\r\n// const ProfileDataForm = ({ userProfile, onSubmit }) => {\r\n//     let initialValues = { ...userProfile, ...userProfile.contacts }\r\n//     return (\r\n//         <Form\r\n//             onSubmit={onSubmit}\r\n//             initialValues={initialValues}\r\n//\r\n//             render={({\r\n//                 submitError, handleSubmit, type = 'text',\r\n//                 validators = [required, maxLength(25), minLength(5)],\r\n//                 reset, form, submitting, pristine, values,\r\n//             }) => {\r\n//                 return (\r\n//                     <form onSubmit={handleSubmit} className={s.profileDataItem}>\r\n//                         <button type=\"submit\">Submit</button>\r\n//                         <div className={s.profileDataItem_type}>\r\n//                             <b>{'fullName: '}</b>\r\n//                         </div>\r\n//                         <Field\r\n//                             name={'fullName'}\r\n//                             className={s.profileDataItem_value + ' ' + (submitError ? s.submitError : s.correct)}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'Full name'}\r\n//                             validate={composeValidators(...validators)}\r\n//                         />\r\n//                         <Field\r\n//                             name={'userId'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'ID'}\r\n//                             validate={composeValidators(...validators)}\r\n//                         />\r\n//                         <Field\r\n//                             name={'aboutMe'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'About me'}\r\n//                             validate={composeValidators()}\r\n//                         />\r\n//                         <Field\r\n//                             name={'lookingForAJob'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={'checkbox'}\r\n//                             placeholder={'Looking for a job'}\r\n//                             validate={composeValidators()}\r\n//                         />\r\n//                         <Field\r\n//                             name={'lookingForAJobDescription'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'My profs skills'}\r\n//                             validate={composeValidators()}\r\n//                         />\r\n//\r\n//                         <div><b>Contacts</b></div>\r\n//                         <div className={s.contactsBlock}>\r\n//                             {Object.keys(userProfile.contacts).map(k =>\r\n//                                 <Field key={k}\r\n//                                        name={'contacts.' + k}\r\n//                                        className={submitError ? s.submitError : s.correct}\r\n//                                        component={Input}\r\n//                                        type={type}\r\n//                                        placeholder={k}\r\n//                                        validate={composeValidators()}/>)}\r\n//                         </div>\r\n//                     </form>\r\n//                 )\r\n//             }\r\n//             }\r\n//         />\r\n//\r\n//     )\r\n// }\r\n","import { profileAPI } from '../api/api'\r\nimport { toggleFetching } from './appReducer'\r\nimport { FORM_ERROR } from 'final-form'\r\n\r\nconst ADD_POST = 'profilePage/ADD_POST'\r\nconst DELETE_POST = 'profilePage/DELETE_POST'\r\nconst SET_USER_PROFILE_DATA = 'profilePage/SET_USER_PROFILE_DATA'\r\nconst SET_STATUS = 'profilePage/SET_STATUS'\r\nconst SET_PROFILE_PHOTO = 'profilePage/SET_PROFILE_PHOTO'\r\n\r\nlet initialState = {\r\n    status: '',\r\n    userProfile: {\r\n        userId: null,\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: '',\r\n        aboutMe: '',\r\n        contacts: {\r\n            // github: null,\r\n            // vk: null,\r\n            // facebook: null,\r\n            // instagram: null,\r\n            // twitter: null,\r\n            // website: null,\r\n            // youtube: null,\r\n            // mainLink: null,\r\n        },\r\n        photos: {\r\n            small: null,\r\n            large: null,\r\n        }\r\n    },\r\n    postsData: [\r\n        { id: 1, message: 'Hi, how are you', likesCount: 5 },\r\n        { id: 2, message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.', likesCount: 10 },\r\n    ],\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.postsData.length + 1, //id counter imitation\r\n                message: action.newPostText,\r\n                likesCount: state.postsData.length + 1  //likes counter imitation\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData.filter(p => p.id !== action.id)],\r\n            }\r\n\r\n        case SET_USER_PROFILE_DATA:\r\n            return {\r\n                ...state,\r\n                userProfile: {\r\n                    ...action.userProfile,\r\n                    contacts: { ...action.userProfile.contacts },\r\n                    photos: { ...action.userProfile.photos },\r\n                },\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.statusText,\r\n            }\r\n\r\n        case SET_PROFILE_PHOTO:\r\n            // debugger\r\n            return {\r\n                ...state,\r\n                userProfile: {\r\n                    ...state.userProfile,\r\n                    photos: { ...action.photos },\r\n                },\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = newPostText => ({ type: ADD_POST, newPostText })\r\nexport const deletePost = id => ({ type: DELETE_POST, id })\r\nexport const setUserProfileData = userProfile => ({ type: SET_USER_PROFILE_DATA, userProfile })\r\nexport const setUserStatus = statusText => ({ type: SET_STATUS, statusText })\r\nexport const setProfilePhoto = photos => ({ type: SET_PROFILE_PHOTO, photos })\r\n\r\nexport const getUserProfile = userId => async dispatch => {\r\n    // debugger\r\n    toggleFetching(true)\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileData(response.data))\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const getUserStatus = userId => async dispatch => {\r\n    const response = await profileAPI.getUserStatus(userId)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateUserStatus = statusText => async dispatch => {\r\n    try {\r\n        const response = await profileAPI.updateUserStatus(statusText)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(statusText))\r\n        }\r\n    } catch (error) {\r\n        // debugger\r\n        alert('Error from thank \"updateUserStatus\":' + error)\r\n    }\r\n}\r\n\r\nexport const updatePhoto = photo => async dispatch => {\r\n    toggleFetching(true)\r\n    const response = await profileAPI.updatePhoto(photo)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfilePhoto(response.data.data.photos))\r\n        dispatch(toggleFetching(false))\r\n    }\r\n}\r\n\r\nexport const updateProfileData = formData => async dispatch => {\r\n    toggleFetching(true)\r\n    const response = await profileAPI.updateProfileData(formData)\r\n    // debugger\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(formData.userId))\r\n        dispatch(toggleFetching(false))\r\n    } else {\r\n        const errorsObj = {contacts:{}}\r\n        response.data.messages.map(m => {\r\n        const errorMessage = m.split('->')[1].replace(')','').toLowerCase()\r\n            errorsObj.contacts[errorMessage] = m\r\n        })\r\n        return errorsObj\r\n        // return { [FORM_ERROR]: response.data.messages[0] }\r\n    }\r\n}\r\n\r\nexport default profilePageReducer\r\n","// import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <img alt='ava'\r\n        className={s.avatar}\r\n        src=\"https://lwlies.com/wp-content/uploads/2017/04/avatar-2009.jpg\"\r\n      />\r\n      <div className={s.postText}>{props.message}</div>\r\n      <div>\r\n        <span>{props.likesCount} likes</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { composeValidators, maxLength, minLength, required } from '../../../../utils/validators/validators'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const postsElements = props.posts.slice(0).reverse().map(p =>\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount}/>\r\n    )\r\n    const addPost = formData => props.addPost(formData.newPostText)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            My posts\r\n            <div>\r\n                <AddPostForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={props.onSubmit}\r\n            // initialValues={{}}\r\n            render={({ handleSubmit, form, submitting, pristine, values }) => {\r\n                // debugger\r\n                return (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Field\r\n                            name='newPostText'\r\n                            component={Textarea}\r\n                            className={s.textareaBlock}\r\n                            placeholder='Enter your new post'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(25),\r\n                                minLength(5))}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={submitting}\r\n                        >\r\n                            Add post\r\n                        </button>\r\n                    </form>)\r\n            }\r\n            }\r\n        />)\r\n}\r\n\r\nexport default MyPosts\r\n","// import React from \"react\";\r\nimport { addPost } from '../../../../redux/profilePageReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = state => ({\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts)\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = ({\r\n    authId, userProfile, status, updateUserStatus, isOwner, updatePhoto, updateProfileData\r\n}) => {\r\n    // console.log('Profile - status: ', status)\r\n    // debugger\r\n    return (\r\n        <div>\r\n            <ProfileInfo className={s.profileInfoBlock}\r\n                         authId={authId}\r\n                         userProfile={userProfile}\r\n                         status={status}\r\n                         updateUserStatus={updateUserStatus}\r\n                         isOwner={isOwner}\r\n                         updatePhoto={updatePhoto}\r\n                         updateProfileData={updateProfileData}\r\n            />\r\n            <MyPostsContainer\r\n                className={s.profileInfoBlock}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport {\r\n    getUserProfile, getUserStatus, setUserProfileData, updateUserStatus, updatePhoto, updateProfileData\r\n} from '../../../redux/profilePageReducer'\r\nimport { withRouter } from 'react-router'\r\nimport { compose } from 'redux'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n\r\n// import { Redirect } from 'react-router-dom'\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile () {\r\n        // debugger\r\n        const userId = this.props.match.params.userId || this.props.authId // получаем userId из Match благодаря оборачиванию в withRouter\r\n        if (!userId) {\r\n            this.props.history.push('/login')\r\n        } else {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getUserStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshots) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render () {\r\n        // if (!this.props.match.params.userId && !this.props.userProfile.userId) { return <Redirect to='/login'/>}\r\n        return (\r\n            <div>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Profile\r\n                    authId={this.props.authId} userProfile={this.props.userProfile}\r\n                    status={this.props.status} updateUserStatus={this.props.updateUserStatus}\r\n                    isOwner={!this.props.match.params.userId || String(this.props.match.params.userId) === String(this.props.authId)}\r\n                    updatePhoto={this.props.updatePhoto}\r\n                    updateProfileData={this.props.updateProfileData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        authId: state.auth.id,\r\n        userProfile: state.profilePage.userProfile,\r\n        status: state.profilePage.status,\r\n        isFetching: state.profilePage.isFetching,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n            getUserProfile, getUserStatus,\r\n            updateUserStatus, setUserProfileData,\r\n            updatePhoto, updateProfileData,\r\n        }\r\n    ),\r\n    withRouter,\r\n)\r\n(ProfileContainer)\r\n","import { Form, Field } from 'react-final-form'\r\nimport { composeValidators, maxLength, minLength, required } from '../../../utils/validators/validators'\r\nimport { Input } from '../../common/FormsControls/FormsControls'\r\nimport React from 'react'\r\nimport s from '../Messenger/Messenger.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Login = ({ isAuth, logIn, captchaURL }) => {\r\n\r\n    // const logIn = ({ email, password, rememberMe }) => props.logIn(email, password, rememberMe)\r\n\r\n    if (isAuth) return <Redirect to='/profile'/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm logIn={logIn} captchaURL={captchaURL}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({ logIn, captchaURL }) => {\r\n    const onSubmit = ({ email, password, rememberMe, captcha }) => logIn(email, password, rememberMe=false, captcha)\r\n    return (\r\n        <Form\r\n            // className={s.correct}\r\n            onSubmit={onSubmit}\r\n            // initialValues={{}}\r\n            render={({\r\n                submitError,\r\n                handleSubmit,\r\n                reset,\r\n                form,\r\n                submitting,\r\n                pristine,\r\n                values,\r\n            }) => {\r\n\r\n                return (\r\n                    <form\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <div className={s.submitError}>\r\n                            {submitError}\r\n                        </div>\r\n                        <Field\r\n                            name='email'\r\n                            className={submitError ? s.submitError : s.correct}\r\n                            component={Input}\r\n                            placeholder='Email'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(25),\r\n                                minLength(5)\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name='password'\r\n                            className={submitError ? s.submitError : s.correct}\r\n                            placeholder='Password'\r\n                            component={Input}\r\n                            type='password'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(25),\r\n                                minLength(5))}\r\n                        />\r\n                        <label>\r\n                            <Field\r\n                                name='rememberMe'\r\n                                component={Input}\r\n                                type='checkbox'\r\n                            />\r\n                            remember me </label>\r\n                        <div>\r\n                        {captchaURL && <img src={captchaURL}/>}\r\n                        {captchaURL && <Field\r\n                            name='captcha'\r\n                            className={submitError ? s.submitError : s.correct}\r\n                            placeholder='Captcha'\r\n                            component={Input}\r\n                            type='text'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(10))}\r\n                        />}\r\n\r\n                        </div>\r\n                        <div className={s.buttonBlock}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={submitting}>\r\n                                Login\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={form.reset}\r\n                                // disabled={submitting || pristine}\r\n                            >\r\n                                Reset\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                )\r\n            }\r\n            }\r\n        />)\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n","import React from 'react'\r\nimport { logIn } from '../../../redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport Login from './Login'\r\n\r\nclass LoginContainer extends React.Component {\r\n    render () {\r\n        return (\r\n            <Login {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL\r\n})\r\nexport default connect(mapStateToProps, {logIn})(LoginContainer)\r\n\r\n\r\n","import React from 'react'\r\nimport { Switch, Redirect, Route } from 'react-router-dom'\r\nimport s from './Content.module.css'\r\nimport ProfileContainer from './Profile/ProfileContainer'\r\nimport LoginContainer from './Login/LoginContainer'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nconst MessengerContainer = React.lazy(() => import('./Messenger/MessengerContainer'))\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer'))\r\nconst News = React.lazy(() => import('./News/News'))\r\nconst Music = React.lazy(() => import('./Music/Music'))\r\nconst Settings = React.lazy(() => import('./Settings/Settings'))\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className={s.appWrapperContent}>\r\n            <div className={s.contentHeadImage}></div>\r\n            <div className={s.dynamicContent}>\r\n                <React.Suspense fallback={<Preloader/>}>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\"/>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/messenger\" render={() => <MessengerContainer/>}/>\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/news\" render={() => <News/>}/>\r\n                        <Route path=\"/music\" render={() => <Music/>}/>\r\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                        <Route path='/login' render={() => <LoginContainer/>}/>\r\n                        <Route path=\"*\" render={() => <div> 404 Not Found </div>}/>\r\n                    </Switch>\r\n                </React.Suspense>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","// import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nconst Header = props => {\r\n    // debugger\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='logo' src=\"https://templates.iqonic.design/socialv/intro/images/logo-full.png\"\r\n                 className={s.headerImg}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.login + ' '}\r\n                        <button type=\"button\" onClick={props.logOut}> LogOut</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>\r\n                        Login\r\n                    </NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { logOut } from '../../redux/authReducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render () { return <Header {...this.props}/> }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default connect(mapStateToProps, {\r\n    logOut\r\n})\r\n(HeaderContainer)\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\n// import { BrowserRouter } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Content from './components/Content/Content'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { initializeApp } from './redux/appReducer'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\n\r\n\r\nclass App extends React.Component {\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        alert(`unhandled error is catched: ${reason}`)\r\n        console.error(reason, promise)\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.initializeApp()\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount    () {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.initialized) return <Preloader />\r\n        return (\r\n            // <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <HashRouter>\r\n                <div className={s.appWrapper}>\r\n                    <div className={s.block + ' ' + s.header}><HeaderContainer/></div>\r\n                    <div className={s.block + ' ' + s.navbar}><Navbar/></div>\r\n                    <div className={s.block + ' ' + s.content}><Content/></div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    // withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n            initializeApp\r\n            // getAuthUserData,\r\n        }\r\n    )\r\n)\r\n(App)\r\n\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default sidebarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport profilePageReducer from './profilePageReducer'\r\nimport messengerPageReducer from './messengerPageReducer'\r\nimport sidebarReducer from './sidebarReducer'\r\nimport usersPageReducer from './usersPageReducer'\r\nimport authReducer from './authReducer'\r\nimport appReducer from './appReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    messengerPage: messengerPageReducer,\r\n    usersPage: usersPageReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose    /* redux-devtools-extension */\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware) /* redux-devtools-extension */\r\n))\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import reportWebVitals from './reportWebVitals'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './redux/redux-store'\r\nimport { Provider } from 'react-redux'\r\n\r\n// setInterval(() => { store.dispatch({ type: 'FAKE' })}, 1000)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals()\r\n"],"sourceRoot":""}