{"version":3,"sources":["api/api.js","components/Navbar/Navbar.jsx","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","assets/images/Spinner-1s-200px.svg","components/common/Preloader/Preloader.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","redux/profilePageReducer.ts","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx","components/Content/Login/Login.jsx","components/Content/Login/LoginContainer.jsx","components/Content/Content.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","redux/sidebarReducer.ts","redux/redux-store.js","index.tsx","components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.js","components/Content/Messenger/Messenger.module.css","redux/authReducer.ts","App.module.css","components/Navbar/Navbar.module.css","components/Content/Content.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/common/FormsControls/FormsControls.module.css","assets/images/defaultAvatar.png","redux/messengerPageReducer.ts","utils/objectHelpers.js","redux/usersPageReducer.ts","utils/validators/validators.js","components/common/Preloader/Preloader.module.css","redux/appReducer.ts"],"names":["instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","usersOnPage","currentPage","get","unfollowUser","userId","delete","followUser","post","getProfile","authId","console","warn","profileAPI","getUserStatus","updateUserStatus","status","put","updatePhoto","photo","formData","FormData","append","updateProfileData","contacts","authAPI","me","logIn","email","password","rememberMe","captcha","logOut","securityAPI","getCaptchaURL","Navbar","props","className","s","nav","to","activeClassName","active","ProfileStatus","React","useState","editMode","setEditMode","setStatus","useEffect","statusInputBlock","onChange","e","currentTarget","value","autoFocus","onBlur","statusBlock","onDoubleClick","Preloader","alt","preloader","src","ProfileDataItem","dataType","dataValue","name","type","validators","profileDataItem","profileDataItem_type","profileDataItem_value","component","Input","placeholder","validate","composeValidators","ProfileData","userProfile","isOwner","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactsBlock","Object","keys","map","k","ProfileDataForm","exitEditMode","initialValues","onSubmit","a","response","render","submitError","handleSubmit","hasValidationErrors","submitting","pristine","disabled","required","val","String","undefined","ProfileInfo","profileMainBlock","profileAvatarBlock","profileAvatar","photos","small","defaultAvatar","target","files","profileDataBlock","profileStatusBlock","ADD_POST","DELETE_POST","SET_USER_PROFILE_DATA","SET_STATUS","SET_PROFILE_PHOTO","initialState","github","vk","facebook","instagram","twitter","website","youtube","mainLink","large","postsData","id","message","likesCount","setUserProfileData","setUserStatus","statusText","getUserProfile","dispatch","toggleFetching","data","profilePageReducer","state","action","length","newPostText","filter","p","Post","avatar","postText","MyPosts","memo","postsElements","posts","slice","reverse","postsBlock","addPost","AddPostForm","form","values","Textarea","textareaBlock","maxLength","minLength","connect","profilePage","Profile","profileInfoBlock","MyPostsContainer","ProfileContainer","this","match","params","history","push","refreshProfile","prevProps","prevState","snapshots","isFetching","Component","compose","auth","resultCode","alert","errorsObj","messages","errorMessage","split","replace","toLowerCase","withRouter","LoginForm","captchaURL","reset","correct","buttonBlock","Login","isAuth","LoginContainer","MessengerContainer","lazy","UsersContainer","News","Music","Settings","Content","appWrapperContent","contentHeadImage","dynamicContent","Suspense","fallback","exact","from","path","Header","header","headerImg","loginBlock","login","HeaderContainer","App","catchAllUnhandledErrors","reason","promise","error","initializeApp","window","addEventListener","removeEventListener","initialized","appWrapper","block","navbar","content","app","sidebarReducer","reducers","combineReducers","messengerPage","messengerPageReducer","usersPage","usersPageReducer","sidebar","authReducer","appReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById","module","exports","Element","input","meta","hasError","touched","formControl","SET_USER","SET_CAPTCHA","setAuthUserData","payload","getAuthUserData","getCaptchaUrl","FORM_ERROR","url","ADD_MESSAGE","dialogsData","messagesData","addMessage","newMessageText","updateObjectInArray","items","itemId","objPropName","newObjProps","item","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_FOLLOWING","users","totalUsersCount","followingInProgress","followAC","unfollowAC","setCurrentPage","toggleFollowing","following","requestUsers","page","totalCount","followUnfollowFlow","APIMethod","actionCreator","bind","followed","reduce","validator","max","min","INITIALIZED_SUCCESS","TOGGLE_FETCHING","Promise","all","then"],"mappings":"kRAEMA,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SAAU,eAACC,EAAD,uDAAe,GAAIC,EAAnB,uDAAiC,EAAjC,OACNT,EAASU,IAAT,sBAA4BF,EAA5B,iBAAgDC,KACpDE,aAAc,SAAAC,GAAM,OAChBZ,EAASa,OAAT,iBAA0BD,KAC9BE,WAAY,SAAAF,GAAM,OACdZ,EAASe,KAAT,iBAAwBH,GAAU,KACtCI,WAPoB,SAORJ,EAAQK,GAEhB,OADAC,QAAQC,KAAK,6CACNC,EAAWJ,WAAWJ,EAAQK,KAIhCG,EAAa,CACtBJ,WAAY,SAAAJ,GAAM,OACdZ,EAASU,IAAT,kBAAwBE,KAC5BS,cAAe,SAAAT,GAAM,OACjBZ,EAASU,IAAT,yBAA+BE,KACnCU,iBAAkB,SAAAC,GAAM,OACpBvB,EAASwB,IAAT,iBAA+B,CAAED,OAAQA,KAC7CE,YAAa,SAAAC,GACT,IAAIC,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,QAASH,GAElB1B,EAASwB,IAAT,gBAA8BG,EAAU,CAC3CtB,QAAS,CACL,eAAgB,0BAI5ByB,kBAAmB,SAAAH,GAAQ,OACvB3B,EAASwB,IAAT,qCAA6BG,GAAaA,EAASI,aAG9CC,EAAU,CACnBC,GAAI,kBACAjC,EAASU,IAAT,YACJwB,MAAO,SAACC,EAAOC,EAAUC,GAAlB,IAA8BC,EAA9B,uDAAwC,GAAxC,OACHtC,EAASe,KAAT,aAA4B,CAAEoB,QAAOC,WAAUC,aAAYC,aAC/DC,OAAQ,kBACJvC,EAASa,OAAT,gBAGK2B,EAAc,CACvBC,cAAe,kBACXzC,EAASU,IAAI,+B,sKCtCNgC,EAbA,SAACC,GACZ,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,8BAAK,cAAC,IAAD,CAASC,GAAI,WAAYC,gBAAiBH,IAAEI,OAA5C,uBACL,8BAAK,cAAC,IAAD,CAASF,GAAI,aAAcC,gBAAiBH,IAAEI,OAA9C,yBACL,8BAAK,cAAC,IAAD,CAASF,GAAI,SAAUC,gBAAiBH,IAAEI,OAA1C,qBACL,8BAAK,cAAC,IAAD,CAASF,GAAI,QAASC,gBAAiBH,IAAEI,OAAzC,oBACL,8BAAK,cAAC,IAAD,CAASF,GAAI,SAAUC,gBAAiBH,IAAEI,OAA1C,qBACL,8BAAK,cAAC,IAAD,CAASF,GAAI,YAAaC,gBAAiBH,IAAEI,OAA7C,4B,yICyCFC,EAhDO,SAAAP,GAClB,MAA8BQ,IAAMC,UAAS,GAA7C,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BH,IAAMC,SAAST,EAAMpB,QAA/C,mBAAKA,EAAL,KAAagC,EAAb,KAEAJ,IAAMK,WAAU,WACZD,EAAUZ,EAAMpB,UACjB,CAACoB,EAAMpB,SAiBV,OACI,8BAEQ8B,EACM,8BACE,uBACIT,UAAWC,IAAEY,iBACbC,SAXD,SAAAC,GACnBJ,EAAUI,EAAEC,cAAcC,QAWNC,WAAW,EACXC,OAlBG,WACvBT,GAAY,GACZX,EAAMrB,iBAAiBC,IAiBHsC,MAAOtC,MAGb,8BACM,sBACIqB,UAAWC,IAAEmB,YACbC,cA/BH,WACjBtB,EAAM1B,SAAW0B,EAAM/B,QACvB0C,GAAY,IA2BI,SAIC/B,GAAU,mB,iBC9CxB,MAA0B,6CCY1B2C,EARG,WACd,OACI,8BACI,qBAAKC,IAAI,YAAYvB,UAAWC,IAAEuB,UAAWC,IAAKD,O,uBCwCxDE,EAAkB,SAAC,GAAkF,IAAhFjB,EAA+E,EAA/EA,SAAUkB,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,UAA2D,IAAhDC,YAAgD,MAAzC,GAAyC,MAArCC,YAAqC,MAA9B,OAA8B,MAAtBC,kBAAsB,MAAT,GAAS,EACtG,OACI,sBAAK/B,UAAWC,IAAE+B,gBAAlB,UACI,qBAAKhC,UAAWC,IAAEgC,qBAAlB,SACI,4BAAIN,EAAW,SAEnB,qBAAK3B,UAAWC,IAAEiC,sBAAlB,SACKzB,EACK,cAAC,IAAD,CACEoB,KAAMA,EACNM,UAAWC,IACXN,KAAMA,EACNO,YAAaV,EACbW,SAAUC,IAAiB,WAAjB,cAAqBR,MAEhCH,GAAa,UAK9BY,EAAc,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,YAAa/B,EAAsC,EAAtCA,YAAagC,EAAyB,EAAzBA,QAASjC,EAAgB,EAAhBA,SACtD,OACI,gCACKiC,GAAW,wBAAQC,QAAS,kBAAMjC,GAAY,IAAnC,uBACZ,cAAC,EAAD,CAAiBD,SAAUA,EAAUkB,SAAS,YAAYC,UAAWa,EAAYG,WACjF,cAAC,EAAD,CAAiBnC,SAAUA,EAAUkB,SAAS,KAAKC,UAAWa,EAAYzE,SAC1E,cAAC,EAAD,CAAiByC,SAAUA,EAAUkB,SAAS,WAAWC,UAAWa,EAAYI,UAChF,cAAC,EAAD,CAAiBpC,SAAUA,EAAUkB,SAAS,oBAC7BC,UAAWa,EAAYK,eAAiB,MAAQ,OACjE,cAAC,EAAD,CAAiBrC,SAAUA,EAAUkB,SAAS,kBAC7BC,UAAWa,EAAYM,4BACxC,8BAAK,2CACL,sBAAK/C,UAAWC,IAAE+C,cAAlB,cAAmCC,OAAOC,KAAKT,EAAYtD,UAAUgE,KAAI,SAAAC,GAAC,OACtE,cAAC,EAAD,CAAiB3C,SAAUA,EAAUkB,SAAUyB,EAAGxB,UAAWa,EAAYtD,SAASiE,IAASA,aAMrGC,EAAkB,SAAC,GAAwE,IAAtEZ,EAAqE,EAArEA,YAAahC,EAAwD,EAAxDA,SAAUpC,EAA8C,EAA9CA,OAAQiF,EAAsC,EAAtCA,aAAcpE,EAAwB,EAAxBA,kBAChEqE,EAAa,2BAAQd,GAAgBA,EAAYtD,iBAC9CoE,EAAa,OAEpB,IAAMC,EAAQ,uCAAG,WAAMzE,GAAN,eAAA0E,EAAA,sEACUvE,EAAkBH,GAD5B,YACP2E,EADO,iDAEQA,GAFR,OAGbJ,IAHa,2CAAH,sDAMd,OACI,cAAC,IAAD,CACIE,SAAUA,EACVD,cAAeA,EACfI,OAAQ,YAGD,IAFHC,EAEE,EAFFA,YAAaC,EAEX,EAFWA,aAAcC,EAEzB,EAFyBA,oBAC3BC,EACE,EADFA,WAAYC,EACV,EADUA,SAGZ,OACI,uBAAMR,SAAUK,EAAhB,UACI,wBAAQ/B,KAAK,SACLmC,SAAUF,GAAcC,GAAYF,EAD5C,oBAKG,+BACKF,GAAgB,IAAMA,IAE9B,cAAC,EAAD,CAAiBnD,SAAUA,EAAUkB,SAAS,YAAYC,UAAWa,EAAYG,SAChEf,KAAK,WAAWE,WAAY,CAACmC,OAE9C,cAAC,EAAD,CAAiBzD,UAAU,EAAOkB,SAAS,KAAKC,UAAWa,EAAYzE,OAAQ6D,KAAK,SACnEE,WAAY,CAAC,SAAAoC,GAAG,OAAIC,OAAOD,KAASC,OAAO/F,QAAUgG,EAAjC,oBAA0DhG,OAE/F,cAAC,EAAD,CAAiBoC,SAAUA,EAAUkB,SAAS,WAAWC,UAAWa,EAAYI,QAC/DhB,KAAK,UAAUE,WAAY,CAACmC,OAE7C,cAAC,EAAD,CAAiBzD,SAAUA,EAAUkB,SAAS,oBAC7BC,UAAWa,EAAYK,eAAiB,MAAQ,KAChDjB,KAAK,iBAAiBC,KAAK,aAE5C,cAAC,EAAD,CAAiBrB,SAAUA,EAAUkB,SAAS,kBAC7BC,UAAWa,EAAYM,0BACvBlB,KAAK,4BAA4BE,WAAY,CAACmC,OAE/D,8BAAK,2CACL,sBAAKlE,UAAWC,IAAE+C,cAAlB,cAAmCC,OAAOC,KAAKT,EAAYtD,UAAUgE,KAAI,SAAAC,GAAC,OACtE,cAAC,EAAD,CAAiB3C,SAAUA,EAAUkB,SAAUyB,EAAGxB,UAAWa,EAAYtD,SAASiE,GACjEvB,KAAM,YAAcuB,GAAQA,gBAW1DkB,EAzIK,SAAC,GAAgG,IAA9FjG,EAA6F,EAA7FA,OAAQoE,EAAqF,EAArFA,YAAa9D,EAAwE,EAAxEA,OAAQD,EAAgE,EAAhEA,iBAAkBgE,EAA8C,EAA9CA,QAAS7D,EAAqC,EAArCA,YAAaK,EAAwB,EAAxBA,kBACxF,EAA8BqB,IAAMC,UAAS,GAA7C,mBAAKC,EAAL,KAAeC,EAAf,KAEA,OAAK+B,EAAYzE,OAGb,sBAAKgC,UAAWC,IAAEsE,iBAAlB,UAGI,sBAAKvE,UAAWC,IAAEuE,mBAAlB,UACI,qBAAKxE,UAAWC,IAAEwE,cAAelD,IAAI,aAChCE,IAAKgB,EAAYiC,OAAOC,MAAQlC,EAAYiC,OAAOC,MAAQC,MAC/DlC,GAAW,uBAAOZ,KAAM,OAAQhB,SAAU,SAAAC,GAAC,OAAIlC,EAAYkC,EAAE8D,OAAOC,MAAM,UAK/E,qBAAK9E,UAAWC,IAAE8E,iBAAlB,SACKtE,EACK,cAAC,EAAD,CAAiBgC,YAAaA,EAAahC,SAAUA,EAAUpC,OAAQA,EACtDiF,aAAc,kBAAM5C,GAAY,IAChCxB,kBAAmBA,IAEpC,cAAC,EAAD,CAAauD,YAAaA,EAAahC,SAAUA,EAAUC,YAAaA,EAC3DgC,QAASA,MAMhC,qBAAK1C,UAAWC,IAAE+E,mBAAlB,SACI,cAAC,EAAD,CAAe3G,OAAQA,EAAQL,OAAQyE,EAAYzE,OACpCW,OAAQA,EAAQD,iBAAkBA,SA7B5B,cAAC,EAAD,K,eCL/BuG,EAAW,uBACXC,EAAc,0BACdC,EAAwB,oCACxBC,EAAa,yBACbC,EAAoB,gCAOpBC,GAAgB,CACpB3G,OAAQ,GACR8D,YAAa,CACXG,SAAU,GACV5E,OAAQ,EACR6E,QAAS,GACTC,gBAAgB,EAChBC,0BAA2B,GAC3B5D,SAAU,CACRoG,OAAQ,GACRC,GAAI,GACJC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,IAEZpB,OAAO,CACLC,MAAM,GACNoB,MAAM,KAGVC,UAAW,CACT,CAACC,GAAI,EAAGC,QAAS,kBAAmBC,WAAY,GAChD,CAACF,GAAI,EAAGC,QAAS,4DAA6DC,WAAY,MA4EjFC,GAA+C,SAAC3D,GAAD,MAAkB,CAC5EX,KAAMqD,EACN1C,gBAOW4D,GAAqC,SAACC,GAAD,MAAiB,CAACxE,KAAMsD,EAAYkB,eAWzEC,GAAiB,SAACvI,GAAD,8CAAoB,WAAOwI,GAAP,eAAA/C,EAAA,6DAChDgD,aAAe,GADiC,SAEzBjI,IAAWJ,WAAWJ,GAFG,OAE1C0F,EAF0C,OAGhD8C,EAASJ,GAAmB1C,EAASgD,OACrCF,EAASC,aAAe,IAJwB,2CAApB,uDAwDfE,GAjJY,WAA0D,IAAzDC,EAAwD,uDAAhDtB,GAAcuB,EAAkC,uCAElF,OAAQA,EAAO/E,MAEb,KAAKmD,EACH,OAAO,2BACF2B,GADL,IAEEZ,UAAU,GAAD,mBAAMY,EAAMZ,WAAZ,CAAuB,CAC9BC,GAAIW,EAAMZ,UAAUc,OAAS,EAC7BZ,QAASW,EAAOE,YAChBZ,WAAYS,EAAMZ,UAAUc,OAAS,OAI3C,KAAK5B,EACH,OAAO,2BACF0B,GADL,IAEEZ,UAAU,YAAKY,EAAMZ,UAAUgB,QAAO,SAAAC,GAAC,OAAIA,EAAEhB,KAAOY,EAAOZ,SAG/D,KAAKd,EACH,OAAO,2BACFyB,GADL,IAEEnE,YAAY,2BACPoE,EAAOpE,aADD,IAETtD,SAAS,eAAK0H,EAAOpE,YAAYtD,UACjCuF,OAAO,eAAKmC,EAAOpE,YAAYiC,YAIrC,KAAKU,EACH,OAAO,2BACFwB,GADL,IAEEjI,OAAQkI,EAAOP,aAGnB,KAAKjB,EACH,OAAO,2BACFuB,GADL,IAEEnE,YAAY,2BACPmE,EAAMnE,aADA,IAETiC,OAAO,eAAKmC,EAAOnC,YAIzB,QACE,OAAOkC,I,wCC9EEM,GAfF,SAACnH,GACZ,OACE,sBAAKC,UAAWC,KAAE9B,KAAlB,UACE,qBAAKoD,IAAI,MACPvB,UAAWC,KAAEkH,OACb1F,IAAI,kEAEN,qBAAKzB,UAAWC,KAAEmH,SAAlB,SAA6BrH,EAAMmG,UACnC,8BACE,iCAAOnG,EAAMoG,WAAb,kBCJFkB,GAAU9G,IAAM+G,MAAK,SAAAvH,GACvB,IAAMwH,EAAgBxH,EAAMyH,MAAMC,MAAM,GAAGC,UAAUvE,KAAI,SAAA8D,GAAC,OACtD,cAAC,GAAD,CAAiBf,QAASe,EAAEf,QAASC,WAAYc,EAAEd,YAAxCc,EAAEhB,OAIjB,OACI,sBAAKjG,UAAWC,KAAE0H,WAAlB,qBAEI,8BACI,cAAC,GAAD,CAAanE,SANT,SAAAzE,GAAQ,OAAIgB,EAAM6H,QAAQ7I,EAASgI,kBAQ3C,qBAAK/G,UAAWC,KAAEuH,MAAlB,SAA0BD,UAMhCM,GAAc,SAAC9H,GACjB,OACI,cAAC,IAAD,CACIyD,SAAUzD,EAAMyD,SAEhBG,OAAQ,YAA2D,IAAxDE,EAAuD,EAAvDA,aAAoBE,GAAmC,EAAzC+D,KAAyC,EAAnC/D,YAAmC,EAAvBC,SAAuB,EAAb+D,OAEjD,OACI,uBAAMvE,SAAUK,EAAhB,UACI,cAAC,IAAD,CACIhC,KAAK,cACLM,UAAW6F,IACXhI,UAAWC,KAAEgI,cACb5F,YAAY,sBACZC,SAAUC,YACN2B,IACAgE,YAAU,IACVC,YAAU,MAElB,wBACIrG,KAAK,SACLmC,SAAUF,EAFd,6BAYTsD,MC9CAe,gBANO,SAAAxB,GAAK,MAAK,CAC5BY,MAAOZ,EAAMyB,YAAYrC,UACzBe,YAAaH,EAAMyB,YAAYtB,eAIK,CACpCa,QH+FkC,SAACb,GAAD,MAAkB,CAACjF,KAAMmD,EAAU8B,iBGhG1DqB,CAEZf,ICeYiB,GAvBC,SAAC,GAEV,IADHjK,EACE,EADFA,OAAQoE,EACN,EADMA,YAAa9D,EACnB,EADmBA,OAAQD,EAC3B,EAD2BA,iBAAkBgE,EAC7C,EAD6CA,QAAS7D,EACtD,EADsDA,YAAaK,EACnE,EADmEA,kBAIrE,OACI,gCACI,cAAC,EAAD,CAAac,UAAWC,IAAEsI,iBACblK,OAAQA,EACRoE,YAAaA,EACb9D,OAAQA,EACRD,iBAAkBA,EAClBgE,QAASA,EACT7D,YAAaA,EACbK,kBAAmBA,IAEhC,cAACsJ,GAAD,CACIxI,UAAWC,IAAEsI,uB,SCVvBE,G,oKACF,WAEI,IAAMzK,EAAS0K,KAAK3I,MAAM4I,MAAMC,OAAO5K,QAAU0K,KAAK3I,MAAM1B,OACvDL,GAGD0K,KAAK3I,MAAMwG,eAAevI,GAC1B0K,KAAK3I,MAAMtB,cAAcT,IAHzB0K,KAAK3I,MAAM8I,QAAQC,KAAK,Y,+BAOhC,WACIJ,KAAKK,mB,gCAGT,SAAoBC,EAAWC,EAAWC,GAClCF,EAAUL,MAAMC,OAAO5K,SAAW0K,KAAK3I,MAAM4I,MAAMC,OAAO5K,QAC1D0K,KAAKK,mB,oBAIb,WAEI,OACI,gCACKL,KAAK3I,MAAMoJ,WAAa,cAAC,EAAD,IAAe,KACxC,cAAC,GAAD,CACI9K,OAAQqK,KAAK3I,MAAM1B,OAAQoE,YAAaiG,KAAK3I,MAAM0C,YACnD9D,OAAQ+J,KAAK3I,MAAMpB,OAAQD,iBAAkBgK,KAAK3I,MAAMrB,iBACxDgE,SAAUgG,KAAK3I,MAAM4I,MAAMC,OAAO5K,QAAUoG,OAAOsE,KAAK3I,MAAM4I,MAAMC,OAAO5K,UAAYoG,OAAOsE,KAAK3I,MAAM1B,QACzGQ,YAAa6J,KAAK3I,MAAMlB,YACxBK,kBAAmBwJ,KAAK3I,MAAMb,2B,GAhCnBqB,IAAM6I,WA+CtBC,gBACXjB,aATkB,SAAAxB,GAClB,MAAO,CACHvI,OAAQuI,EAAM0C,KAAKrD,GACnBxD,YAAamE,EAAMyB,YAAY5F,YAC/B9D,OAAQiI,EAAMyB,YAAY1J,OAC1BwK,WAAYvC,EAAMyB,YAAYc,cAM9B,CACI5C,kBAAgB9H,cLmFC,SAACT,GAAD,8CAAoB,WAAOwI,GAAP,eAAA/C,EAAA,sEACxBjF,IAAWC,cAAcT,GADD,OACzC0F,EADyC,OAE/C8C,EAASH,GAAc3C,EAASgD,OAFe,2CAApB,uDKlFjBhI,iBLuFoB,SAAC4H,GAAD,8CAAwB,WAAOE,GAAP,SAAA/C,EAAA,+EAE7BjF,IAAWE,iBAAiB4H,GAFC,OAGnB,IAHmB,OAGvCI,KAAK6C,YAChB/C,EAASH,GAAcC,IAJ2B,gDAQpDkD,MAAM,6CAR8C,yDAAxB,uDKvFFpD,sBAClBvH,YLkGe,SAACC,GAAD,8CAAgB,WAAO0H,GAAP,eAAA/C,EAAA,6DACzCgD,aAAe,GAD0B,SAElBjI,IAAWK,YAAYC,GAFL,OAGR,KAD3B4E,EAFmC,QAG5BgD,KAAK6C,aAChB/C,GAjCmD9B,EAiC1BhB,EAASgD,KAAKA,KAAKhC,OAjCmB,CAAC5C,KAAMuD,EAAmBX,YAkCzF8B,EAASC,aAAe,KALe,iCA7BW,IAAC/B,IA6BZ,OAAhB,uDKlGFxF,kBL2GQ,SAACH,GAAD,8CAA+B,WAAOyH,GAAP,iBAAA/C,EAAA,6DAC9DgD,aAAe,GAD+C,SAEvCjI,IAAWU,kBAAkBH,GAFU,UAI7B,KAF3B2E,EAFwD,QAIjDgD,KAAK6C,WAJ4C,gBAK5D/C,EAASD,GAAexH,EAASf,SACjCwI,EAASC,aAAe,IANoC,8BAStDgD,EAAyD,CAACtK,SAAU,IAC1EuE,EAASgD,KAAKgD,SAASvG,KAAI,SAAC+C,GAC1B,IAAMyD,EAAuBzD,EAAQ0D,MAAM,MAAM,GAAGC,QAAQ,IAAK,IAAIC,cACrEL,EAAUtK,SAASwK,GAAgBzD,KAZuB,kBAcrDuD,GAdqD,4CAA/B,yDKxG7BM,IATWV,CAWdZ,I,6BCjDKuB,GAAY,SAAC,GAA2B,IAAzB1K,EAAwB,EAAxBA,MAAO2K,EAAiB,EAAjBA,WAExB,OACI,cAAC,IAAD,CAEIzG,SAJS,SAAC,GAAD,IAAGjE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAsBE,GAAhC,EAAoBD,WAApB,EAAgCC,SAAhC,OAA8CJ,EAAMC,EAAOC,GAAqB,EAAOE,IAMhGiE,OAAQ,YAQD,IAPHC,EAOE,EAPFA,YACAC,EAME,EANFA,aAEAiE,GAIE,EALFoC,MAKE,EAJFpC,MACA/D,EAGE,EAHFA,WAGE,EAFFC,SAEE,EADF+D,OAGA,OACI,uBACIvE,SAAUK,EADd,UAGI,qBAAK7D,UAAWC,KAAE2D,YAAlB,SACKA,IAEL,cAAC,IAAD,CACI/B,KAAK,QACL7B,UAAW4D,EAAc3D,KAAE2D,YAAc3D,KAAEkK,QAC3ChI,UAAWC,IACXC,YAAY,QACZC,SAAUC,YACN2B,IACAgE,YAAU,IACVC,YAAU,MAGlB,cAAC,IAAD,CACItG,KAAK,WACL7B,UAAW4D,EAAc3D,KAAE2D,YAAc3D,KAAEkK,QAC3C9H,YAAY,WACZF,UAAWC,IACXN,KAAK,WACLQ,SAAUC,YACN2B,IACAgE,YAAU,IACVC,YAAU,MAElB,kCACI,cAAC,IAAD,CACItG,KAAK,aACLM,UAAWC,IACXN,KAAK,aAJb,kBAOA,gCACCmI,GAAc,qBAAKxI,IAAKwI,IACxBA,GAAc,cAAC,IAAD,CACXpI,KAAK,UACL7B,UAAW4D,EAAc3D,KAAE2D,YAAc3D,KAAEkK,QAC3C9H,YAAY,UACZF,UAAWC,IACXN,KAAK,OACLQ,SAAUC,YACN2B,IACAgE,YAAU,UAIlB,sBAAKlI,UAAWC,KAAEmK,YAAlB,UACI,wBACItI,KAAK,SACLmC,SAAUF,EAFd,mBAKA,wBACIjC,KAAK,SACLa,QAASmF,EAAKoC,MAFlB,6BAebG,GAtGD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQhL,EAAwB,EAAxBA,MAAO2K,EAAiB,EAAjBA,WAI5B,OAAIK,EAAe,cAAC,IAAD,CAAUnK,GAAG,aAG5B,gCACI,uCACA,cAAC,GAAD,CAAWb,MAAOA,EAAO2K,WAAYA,QCX3CM,G,4JACF,WACI,OACI,cAAC,GAAD,eAAW7B,KAAK3I,Y,GAHCQ,IAAM6I,WAapBhB,gBAJS,SAAAxB,GAAK,MAAK,CAC9B0D,OAAQ1D,EAAM0C,KAAKgB,OACnBL,WAAYrD,EAAM0C,KAAKW,cAEa,CAAC3K,YAA1B8I,CAAkCmC,ICX3CC,GAAqBjK,IAAMkK,MAAK,kBAAM,iCACtCC,GAAiBnK,IAAMkK,MAAK,kBAAM,iCAClCE,GAAOpK,IAAMkK,MAAK,kBAAM,iCACxBG,GAAQrK,IAAMkK,MAAK,kBAAM,iCACzBI,GAAWtK,IAAMkK,MAAK,kBAAM,iCAyBnBK,GAvBC,WACZ,OACI,sBAAK9K,UAAWC,IAAE8K,kBAAlB,UACI,qBAAK/K,UAAWC,IAAE+K,mBAClB,qBAAKhL,UAAWC,IAAEgL,eAAlB,SACI,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIlL,GAAG,aAC5B,cAAC,IAAD,CAAOmL,KAAK,oBAAoB3H,OAAQ,kBAAM,cAAC,GAAD,OAC9C,cAAC,IAAD,CAAO2H,KAAK,aAAa3H,OAAQ,kBAAM,cAAC6G,GAAD,OACvC,cAAC,IAAD,CAAOc,KAAK,SAAS3H,OAAQ,kBAAM,cAAC+G,GAAD,OACnC,cAAC,IAAD,CAAOY,KAAK,QAAQ3H,OAAQ,kBAAM,cAACgH,GAAD,OAClC,cAAC,IAAD,CAAOW,KAAK,SAAS3H,OAAQ,kBAAM,cAACiH,GAAD,OACnC,cAAC,IAAD,CAAOU,KAAK,YAAY3H,OAAQ,kBAAM,cAACkH,GAAD,OACtC,cAAC,IAAD,CAAOS,KAAK,SAAS3H,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAO2H,KAAK,IAAI3H,OAAQ,kBAAM,gE,oBCJvC4H,GAnBA,SAAAxL,GAEX,OACI,yBAAQC,UAAWC,KAAEuL,OAArB,UACI,qBAAKjK,IAAI,OAAOE,IAAI,qEACfzB,UAAWC,KAAEwL,YAClB,qBAAKzL,UAAWC,KAAEyL,WAAlB,SACK3L,EAAMuK,OACD,oCAAOvK,EAAM4L,MAAQ,IACnB,wBAAQ7J,KAAK,SAASa,QAAS5C,EAAMJ,OAArC,wBAEF,cAAC,IAAD,CAASQ,GAAI,SAAb,yBCXhByL,G,4JAEF,WAAY,OAAO,cAAC,GAAD,eAAYlD,KAAK3I,Y,GAFVQ,IAAM6I,WASrBhB,gBAJS,SAAAxB,GAAK,MAAK,CAC9B+E,MAAO/E,EAAM0C,KAAKqC,MAClBrB,OAAQ1D,EAAM0C,KAAKgB,UAEiB,CACpC3K,aADWyI,CAGdwD,ICLKC,G,4MACFC,wBAA0B,SAACC,EAAQC,GAC/BxC,MAAM,+BAAD,OAAgCuC,IACrCzN,QAAQ2N,MAAMF,EAAQC,I,uDAG1B,WACItD,KAAK3I,MAAMmM,gBACXC,OAAOC,iBAAiB,qBAAsB1D,KAAKoD,2B,kCAGvD,WACIK,OAAOE,oBAAoB,qBAAsB3D,KAAKoD,2B,oBAG1D,WACI,OAAKpD,KAAK3I,MAAMuM,YAEZ,cAAC,IAAD,UAGI,sBAAKtM,UAAWC,IAAEsM,WAAlB,UACI,qBAAKvM,UAAWC,IAAEuM,MAAQ,IAAMvM,IAAEuL,OAAlC,SAA0C,cAAC,GAAD,MAC1C,qBAAKxL,UAAWC,IAAEuM,MAAQ,IAAMvM,IAAEwM,OAAlC,SAA0C,cAAC,EAAD,MAC1C,qBAAKzM,UAAWC,IAAEuM,MAAQ,IAAMvM,IAAEyM,QAAlC,SAA2C,cAAC,GAAD,WARnB,cAAC,EAAD,Q,GAhB1BnM,IAAM6I,WAoCTC,gBAEXjB,aANoB,SAAAxB,GAAK,MAAK,CAC9B0F,YAAa1F,EAAM+F,IAAIL,eAOnB,CACIJ,oBALG7C,CAUdwC,I,SC1DGvG,GAAe,GAKJsH,GAHQ,WAAuC,IAAtChG,EAAqC,uDAA7BtB,GAC9B,OAAOsB,G,kBCMLiG,GAAWC,aAAgB,CAC3BzE,YAAa1B,GACboG,cAAeC,KACfC,UAAWC,KACXC,QAASP,GACTtD,KAAM8D,KACNT,IAAKU,MAGHC,GAAmBnB,OAAOoB,sCAAwClE,KAClEmE,GAAQC,aAAYZ,GAAUS,GAAiBI,aAAgBC,QAKrExB,OAAOyB,UAAYJ,GAEJA,UCjBfK,IAASlK,OACL,cAAC,IAAD,CAAU6J,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJM,SAASC,eAAe,U,mBCZ5BC,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,mBAAqB,wCAAwC,cAAgB,mCAAmC,iBAAmB,sCAAsC,mBAAqB,wCAAwC,gBAAkB,qCAAqC,sBAAwB,2CAA2C,cAAgB,mCAAmC,qBAAuB,4C,yKC4BxeC,EAAU,SAAAA,GAAO,OAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASrO,EAAY,iBACvDsO,EAAWD,EAAKxK,aAAgBwK,EAAKE,SAAWF,EAAKnC,MAC3D,OACI,sBAAKjM,UAAYC,IAAEsO,YAAc,KAAOF,EAAWpO,IAAEgM,MAAQ,IAA7D,UACMoC,GAAY,qCAASD,EAAKnC,OAASmC,EAAKxK,YAA5B,OACd,cAAC,EAAD,2BAAauK,GAAWpO,SAKvBiI,EAAWkG,EAAQ,YACnB9L,EAAQ8L,EAAQ,U,mBCvC7BF,EAAOC,QAAU,CAAC,QAAU,2BAA2B,aAAe,gCAAgC,cAAgB,iCAAiC,QAAU,2BAA2B,WAAa,8BAA8B,cAAgB,iCAAiC,YAAc,+BAA+B,YAAc,iC,uMCM7UO,EAAW,gBACXC,EAAc,mBAKdnJ,EAAe,CACnBW,GAAI,KACJ1G,MAAO,KACPoM,MAAO,KACPrB,QAAQ,EACRL,WAAY,MAkCDyE,EAAyC,SAACzI,EAAI1G,EAAOoM,EAAOrB,GAAnB,MAA+B,CACnFxI,KAAM0M,EACNG,QAAS,CAAC1I,KAAI1G,QAAOoM,QAAOrB,SAAQL,WAAY,QAYrC2E,EAAkB,yDAAM,WAAOpI,GAAP,uBAAA/C,EAAA,6DACnC+C,EAASC,aAAe,IADW,SAEZrH,IAAQC,KAFI,OAIF,KAF3BqE,EAF6B,QAItBgD,KAAK6C,aAAmB,EACR7F,EAASgD,KAAKA,KAAlCT,EAD2B,EAC3BA,GAAI1G,EADuB,EACvBA,MAAOoM,EADgB,EAChBA,MAClBnF,EAASkI,GAAiBzI,EAAI1G,EAAOoM,GAAO,KAE9CnF,EAASC,aAAe,IARW,2CAAN,uDAWlBnH,EAAQ,SAACC,EAAeC,EAAkBC,EAAqBC,GAAvD,8CAA2E,WAAO8G,GAAP,eAAA/C,EAAA,6DAC9F+C,EAASC,aAAe,IADsE,SAEvErH,IAAQE,MAAMC,EAAOC,EAAUC,EAAYC,GAF4B,UAExFgE,EAFwF,OAG9F8C,EAASC,aAAe,IAES,IAA7B/C,EAASgD,KAAK6C,WAL4E,gBAM5F/C,EAASoI,KANmF,8BAQ3D,KAA7BlL,EAASgD,KAAK6C,YAChB/C,EAASqI,KATiF,iCAWnFC,IAAapL,EAASgD,KAAKgD,SAAS,KAX+C,4CAA3E,uDAeR/J,EAAS,yDAAM,WAAO6G,GAAP,SAAA/C,EAAA,6DAC1B+C,EAASC,aAAe,IADE,SAEHrH,IAAQO,SAFL,OAGO,IAHP,OAGb+G,KAAK6C,YAChB/C,EAASkI,EAAgB,KAAM,KAAM,MAAM,IAE7ClI,EAASC,aAAe,IANE,2CAAN,uDASToI,EAAgB,yDAAM,WAAOrI,GAAP,eAAA/C,EAAA,sEACV7D,IAAYC,gBADF,OAC3B6D,EAD2B,OAGjC8C,GA3C2CyD,EA2CvBvG,EAASgD,KAAKqI,IA3CyB,CAACjN,KAAM2M,EAAaE,QAAS,CAAC1E,iBAwCxD,iCAxCS,IAACA,IAwCV,OAAN,uDASdmD,IAtFK,WAA0D,IAAzDxG,EAAwD,uDAAhDtB,EAAcuB,EAAkC,uCAC3E,OAAQA,EAAO/E,MAEb,KAAK0M,EACL,KAAKC,EACH,OAAO,2BACF7H,GACAC,EAAO8H,SAEd,QACE,OAAO/H,K,mBCjCboH,EAAOC,QAAU,CAAC,WAAa,wBAAwB,MAAQ,mBAAmB,OAAS,oBAAoB,OAAS,oBAAoB,QAAU,uB,mBCAtJD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,mBCArDD,EAAOC,QAAU,CAAC,kBAAoB,mCAAmC,iBAAmB,kCAAkC,eAAiB,kC,mBCA/ID,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,KAAO,sBAAsB,cAAgB,+BAA+B,YAAc,+B,mBCApLD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,SAAW,uBAAuB,aAAe,6B,mBCA3HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,WAAa,6B,wCCArGD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,iBAAmB,0C,mBCAtFD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,gCCD5D,QAA0B,2C,qFCEnCe,EAAc,4BASd1J,EAA6B,CACjC2J,YAAa,CACX,CAAChJ,GAAI,EAAGpE,KAAM,UACd,CAACoE,GAAI,EAAGpE,KAAM,SACd,CAACoE,GAAI,EAAGpE,KAAM,UACd,CAACoE,GAAI,EAAGpE,KAAM,QACd,CAACoE,GAAI,EAAGpE,KAAM,SACd,CAACoE,GAAI,EAAGpE,KAAM,QACd,CAACoE,GAAI,EAAGpE,KAAM,UAEhBqN,aAAc,CACZ,CAACjJ,GAAI,EAAGC,QAAS,UACjB,CAACD,GAAI,EAAGC,QAAS,iBACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,SACjB,CAACD,GAAI,EAAGC,QAAS,cA+BRiJ,EAA+B,SAACC,GAAD,MAAqB,CAACtN,KAAMkN,EAAaI,mBAKtEpC,IA7Bc,WAAsD,IAArDpG,EAAoD,uDAA5CtB,EAAcuB,EAA8B,uCAChF,OAAQA,EAAO/E,OAERkN,EACI,2BACFpI,GADL,IAEEsI,aAAa,GAAD,mBAAMtI,EAAMsI,cAAZ,CAA0B,CACpCjJ,GAAIW,EAAMsI,aAAapI,OAAS,EAChCZ,QAASW,EAAOuI,oBAKbxI,I,iOC9CAyI,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAA7B,OAC/BH,EAAMnM,KAAI,SAAAuM,GAAI,OACVA,EAAKF,KAAiBD,EAAtB,2BACWG,GAASD,GACdC,MCCRC,EAAS,mBACTC,EAAW,qBACXC,EAAY,sBACZC,EAAmB,6BACnBC,EAAwB,kCACxBC,EAAmB,6BAMnB1K,EAAe,CACnB2K,MAAO,GACPC,gBAAiB,EACjBtS,YAAa,GACbC,YAAa,EACbsS,oBAAqB,IAmDVC,EAAyB,SAACpS,GAAD,MAAa,CAAC8D,KAAM6N,EAAQ3R,WAKrDqS,EAA6B,SAACrS,GAAD,MAAa,CAAC8D,KAAM8N,EAAU5R,WAU3DsS,EAAuC,SAACzS,GAAD,MAAkB,CAACiE,KAAMgO,EAAkBjS,gBAalF0S,EAAyC,SAACC,EAAWvK,GAAZ,MAAoB,CAACnE,KAAMkO,EAAkBQ,YAAWvK,OAKjGwK,EAAe,SAAC7S,EAAqB8S,GAAtB,8CAAuC,WAAOlK,GAAP,eAAA/C,EAAA,6DACjE+C,EAASC,aAAe,IADyC,SAE1C/I,IAASC,SAASC,EAAa8S,GAFW,OAE3DhN,EAF2D,OAGjE8C,GA1BuCyJ,EA0BrBvM,EAASgD,KAAK4I,MA1BkB,CAACxN,KAAM+N,EAAWI,WA2BpEzJ,GAjB2D0J,EAiB/BxM,EAASgD,KAAKiK,WAjBsC,CAChF7O,KAAMiO,EACNG,qBAgBA1J,EAASC,aAAe,IALyC,iCAbP,IAACyJ,EAVpBD,IAuB0B,OAAvC,uDAQtBW,EAAkB,uCAAG,WAAOpK,EAAexI,EAAgB6S,EAAgBC,GAAtD,SAAArN,EAAA,6DACzB+C,EAAS+J,GAAgB,EAAMvS,IADN,SAEF6S,EAAU7S,GAFR,OAGQ,IAHR,OAGZ0I,KAAK6C,aAChB/C,EAASsK,EAAc9S,IACvBwI,EAAS+J,GAAgB,EAAOvS,KALT,2CAAH,4DAQXD,EAAe,SAACC,GAAD,8CAAoB,WAAOwI,GAAP,SAAA/C,EAAA,sEACxCmN,EAAmBpK,EAAUxI,EAAQN,IAASK,aAAagT,KAAKrT,KAAW2S,GADnC,2CAApB,uDAGfnS,EAAa,SAACF,GAAD,8CAAoB,WAAOwI,GAAP,SAAA/C,EAAA,sEACtCmN,EAAmBpK,EAAUxI,EAAQN,IAASQ,WAAW6S,KAAKrT,KAAW0S,GADnC,2CAApB,uDAOXlD,IAxGU,WAAsD,IAArDtG,EAAoD,uDAA5CtB,EAAcuB,EAA8B,uCAC5E,OAAQA,EAAO/E,MACb,KAAK6N,EACH,OAAO,2BACF/I,GADL,IAEEqJ,MAAOZ,EAAoBzI,EAAMqJ,MAAOpJ,EAAO7I,OAAQ,KAAM,CAACgT,UAAU,MAE5E,KAAKpB,EACH,OAAO,2BACFhJ,GADL,IAEEqJ,MAAOZ,EAAoBzI,EAAMqJ,MAAOpJ,EAAO7I,OAAQ,KAAM,CAACgT,UAAU,MAE5E,KAAKnB,EACH,OAAO,2BACFjJ,GADL,IAEEqJ,MAAOpJ,EAAOoJ,QAElB,KAAKH,EACH,OAAO,2BACFlJ,GADL,IAEE/I,YAAagJ,EAAOhJ,cAExB,KAAKkS,EACH,OAAO,2BACFnJ,GADL,IAEEsJ,gBAAiBrJ,EAAOqJ,kBAE5B,KAAKF,EACH,OAAO,2BACFpJ,GADL,IAEEuJ,oBAAqBtJ,EAAO2J,UAAP,sBACb5J,EAAMuJ,qBADO,CACctJ,EAAOZ,KADrB,YAEbW,EAAMuJ,oBAAoBnJ,QAAO,SAAAf,GAAE,OAAIA,IAAOY,EAAOZ,SAEjE,QACE,OAAOW,K,+BC9Db,wIAAO,IAAMrE,EAAoB,sCAAIR,EAAJ,yBAAIA,EAAJ,uBAAmB,SAAAd,GAAK,OACrDc,EAAWkP,QAAO,SAAChF,EAAOiF,GAAR,OAAsBjF,GAASiF,EAAUjQ,UAAQoD,KAE1DH,EAAW,SAAAjD,GAAK,OACzBA,OACMoD,EACA,qBAEG6D,EAAY,SAAAiJ,GAAG,OAAI,SAAAlQ,GAAK,OACjCA,GAASA,EAAM6F,OAASqK,EAAxB,kBACiBA,EADjB,4BAEM9M,IAEG8D,EAAY,SAAAiJ,GAAG,OAAI,SAAAnQ,GAAK,OACjCA,GAAUA,EAAM6F,OAASsK,EAAzB,kBACiBA,EADjB,4BAEM/M,K,mBCfV2J,EAAOC,QAAU,CAAC,UAAY,+B,kKCIxBoD,EAA8B,0BAC9BC,EAA0B,sBAS1BhM,EAAiC,CACrCgH,aAAa,EACbnD,YAAY,GAmCD1C,EAAuC,SAAC0C,GAAD,MAAiB,CAACrH,KAAMwP,EAAiBnI,eAKhF+C,EAAgB,yDAAM,WAAO1F,GAAP,eAAA/C,EAAA,sEACX+C,EAASoI,eADE,OAC3B5C,EAD2B,OAGjCuF,QAAQC,IAAI,CAACxF,IAAUyF,MAAK,kBAAMjL,EAd6B,CAAC1E,KAAMuP,OAWrC,2CAAN,uDAUdhE,IA5CI,WAA0D,IAAzDzG,EAAwD,uDAAhDtB,EAAcuB,EAAkC,uCAC1E,OAAQA,EAAO/E,MACb,KAAKuP,EACH,OAAO,2BACFzK,GADL,IAEE0F,aAAa,IAEjB,KAAKgF,EACH,OAAO,2BACF1K,GADL,IAEEuC,WAAYtC,EAAOsC,aAEvB,QACE,OAAOvC,M","file":"static/js/main.f56c726d.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '05f0dc87-f93b-4a11-b796-0fb78655f73d'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (usersOnPage = 10, currentPage = 1) =>\r\n        instance.get(`users?count=${usersOnPage}&page=${currentPage}`),\r\n    unfollowUser: userId =>\r\n        instance.delete(`follow/${userId}`),\r\n    followUser: userId =>\r\n        instance.post(`follow/${userId}`, {}),\r\n    getProfile (userId, authId) {\r\n        console.warn('Obsolete method\" Please profileAPI object')\r\n        return profileAPI.getProfile(userId, authId) // Для сохранения backward compatibility ставляем возможность использовать запросы сюда\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile: userId =>\r\n        instance.get(`profile/${userId}`),\r\n    getUserStatus: userId =>\r\n        instance.get(`profile/status/${userId}`),\r\n    updateUserStatus: status =>\r\n        instance.put(`profile/status`, { status: status }),\r\n    updatePhoto: photo => {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n        // debugger\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfileData: formData =>\r\n        instance.put(`profile`, { ...formData, ...formData.contacts }),\r\n}\r\n\r\nexport const authAPI = {\r\n    me: () =>\r\n        instance.get(`auth/me`),\r\n    logIn: (email, password, rememberMe, captcha = '') =>\r\n        instance.post(`auth/login`, { email, password, rememberMe, captcha }),\r\n    logOut: () =>\r\n        instance.delete(`auth/login`),\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL: () =>\r\n        instance.get('security/get-captcha-url'),\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div><NavLink to={'/profile'} activeClassName={s.active}>Profile</NavLink></div>\r\n            <div><NavLink to={'/messenger'} activeClassName={s.active}>Messenger</NavLink></div>\r\n            <div><NavLink to={'/users'} activeClassName={s.active}>Users</NavLink></div>\r\n            <div><NavLink to={'/news'} activeClassName={s.active}>News</NavLink></div>\r\n            <div><NavLink to={'/music'} activeClassName={s.active}>Music</NavLink></div>\r\n            <div><NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink></div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport s from './ProfileStatus.module.css'\r\n// import { createStore } from 'redux'\r\n\r\n/* Functional implementation with hooks */\r\nconst ProfileStatus = props => {\r\n    let [editMode, setEditMode] = React.useState(false)\r\n    let [status, setStatus] = React.useState(props.status)\r\n\r\n    React.useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if (props.authId === props.userId) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                editMode\r\n                    ? <div>\r\n                        <input\r\n                            className={s.statusInputBlock}\r\n                            onChange={onStatusChange}\r\n                            autoFocus={true}                                 /* автофокус на элементе */\r\n                            onBlur={deactivateEditMode}      /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст */\r\n                            value={status}\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                            <span\r\n                                className={s.statusBlock}\r\n                                onDoubleClick={activateEditMode}    /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст  */\r\n                            >\r\n                            {status || 'No status'}\r\n                            </span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatus\r\n\r\n/* Class implementation */\r\n// class ProfileStatus extends React.Component {\r\n//     state = {                           // локальный стэйт  классовой компоненты\r\n//         editMode: false,\r\n//         status: this.props.status,\r\n//     }\r\n//     activateEditMode = () => {\r\n//         if (this.props.authId === this.props.userId) {\r\n//             this.setState({           // метод Реакта изменяющий локальный стэйт классовой компоненты\r\n//                 editMode: true\r\n//             })\r\n//         }\r\n//     }\r\n//     deactivateEditMode = () => {\r\n//         this.setState({           // метод Реакта изменяющий локальный стэйт классовой компоненты\r\n//             editMode: false,\r\n//         })\r\n//         this.props.updateUserStatus(this.state.status)\r\n//     }\r\n//     onStatusChange = e => {\r\n//         this.setState({ status: e.currentTarget.value })\r\n//     }\r\n//\r\n//     componentDidUpdate (prevProps, prevState, snapshot) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render () {\r\n//         return (\r\n//             <div>\r\n//                 {this.state.editMode\r\n//                     ? <div>\r\n//                         <input\r\n//                             className={s.statusInputBlock}\r\n//                             onChange={this.onStatusChange}\r\n//                             autoFocus={true}                                 /* автофокус на элементе */\r\n//                             onBlur={this.deactivateEditMode}      /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст */\r\n//                             value={this.state.status}/>\r\n//                     </div>\r\n//                     : <div>\r\n//                         <span\r\n//                             className={s.statusBlock}\r\n//                             onDoubleClick={this.activateEditMode}    /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст  */\r\n//                         >\r\n//                             {this.props.status || 'No status'}\r\n//                         </span>\r\n//                     </div>\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n//\r\n// export default ProfileStatus\r\n\r\n","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.a77e97c8.svg\";","import React from 'react'\r\nimport s from './Preloader.module.css'\r\nimport preloader from '../../../assets/images/Spinner-1s-200px.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img alt='preloader' className={s.preloader} src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import s from './ProfileInfo.module.css'\r\nimport defaultAvatar from '../../../../assets/images/defaultAvatar.png'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\r\nimport React from 'react'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { composeValidators, required } from '../../../../utils/validators/validators'\r\nimport { Input } from '../../../common/FormsControls/FormsControls'\r\n\r\nconst ProfileInfo = ({ authId, userProfile, status, updateUserStatus, isOwner, updatePhoto, updateProfileData }) => {\r\n    let [editMode, setEditMode] = React.useState(false)\r\n\r\n    if (!userProfile.userId) {return <Preloader/>}\r\n\r\n    return (\r\n        <div className={s.profileMainBlock}>\r\n\r\n            {/* display and change Profile Photo block */}\r\n            <div className={s.profileAvatarBlock}>\r\n                <img className={s.profileAvatar} alt='userAvatar'\r\n                     src={userProfile.photos.small ? userProfile.photos.small : defaultAvatar}/>\r\n                {isOwner && <input type={'file'} onChange={e => updatePhoto(e.target.files[0])\r\n                }/>}\r\n            </div>\r\n\r\n            {/* display and change Profile Data block */}\r\n            <div className={s.profileDataBlock}>\r\n                {editMode\r\n                    ? <ProfileDataForm userProfile={userProfile} editMode={editMode} authId={authId}\r\n                                       exitEditMode={() => setEditMode(false)}\r\n                                       updateProfileData={updateProfileData}\r\n                    />\r\n                    : <ProfileData userProfile={userProfile} editMode={editMode} setEditMode={setEditMode}\r\n                                   isOwner={isOwner}\r\n                    />}\r\n            </div>\r\n\r\n\r\n            {/* display and change Profile Status block */}\r\n            <div className={s.profileStatusBlock}>\r\n                <ProfileStatus authId={authId} userId={userProfile.userId}\r\n                               status={status} updateUserStatus={updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileDataItem = ({ editMode, dataType, dataValue, name = '', type = 'text', validators = [] }) => {\r\n    return (\r\n        <div className={s.profileDataItem}>\r\n            <div className={s.profileDataItem_type}>\r\n                <b>{dataType + ': '}</b>\r\n            </div>\r\n            <div className={s.profileDataItem_value}>\r\n                {editMode\r\n                    ? <Field\r\n                        name={name}\r\n                        component={Input}\r\n                        type={type}\r\n                        placeholder={dataType}\r\n                        validate={composeValidators(...validators)}\r\n                    />\r\n                    : (dataValue || '-')}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nconst ProfileData = ({ userProfile, setEditMode, isOwner, editMode, }) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <button onClick={() => setEditMode(true)}>Edit Info</button>}\r\n            <ProfileDataItem editMode={editMode} dataType='Full name' dataValue={userProfile.fullName}/>\r\n            <ProfileDataItem editMode={editMode} dataType='ID' dataValue={userProfile.userId}/>\r\n            <ProfileDataItem editMode={editMode} dataType='About me' dataValue={userProfile.aboutMe}/>\r\n            <ProfileDataItem editMode={editMode} dataType='Looking for a job'\r\n                             dataValue={userProfile.lookingForAJob ? 'yes' : 'no'}/>\r\n            <ProfileDataItem editMode={editMode} dataType='My profs skills'\r\n                             dataValue={userProfile.lookingForAJobDescription}/>\r\n            <div><b>Contacts</b></div>\r\n            <div className={s.contactsBlock}> {Object.keys(userProfile.contacts).map(k =>\r\n                <ProfileDataItem editMode={editMode} dataType={k} dataValue={userProfile.contacts[k]} key={k}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileDataForm = ({ userProfile, editMode, authId, exitEditMode, updateProfileData }) => {\r\n    let initialValues = { ...userProfile, ...userProfile.contacts }\r\n    delete initialValues['photos']\r\n\r\n    const onSubmit = async formData => {\r\n        const response = await updateProfileData(formData)\r\n        if (response) return response\r\n        exitEditMode()\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            initialValues={initialValues}\r\n            render={({\r\n                submitError, handleSubmit, hasValidationErrors,\r\n                submitting, pristine,\r\n            }) => {\r\n\r\n                return (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <button type=\"submit\"\r\n                                disabled={submitting || pristine || hasValidationErrors}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                           <span>\r\n                               {submitError && (' ' + submitError) }\r\n                           </span>\r\n                        <ProfileDataItem editMode={editMode} dataType='Full name' dataValue={userProfile.fullName}\r\n                                         name='fullName' validators={[required]}/>\r\n\r\n                        <ProfileDataItem editMode={false} dataType='ID' dataValue={userProfile.userId} name='userId'\r\n                                         validators={[val => String(val) === String(authId) ? undefined : `ID is not ${authId}`]}/>\r\n\r\n                        <ProfileDataItem editMode={editMode} dataType='About me' dataValue={userProfile.aboutMe}\r\n                                         name='aboutMe' validators={[required]}/>\r\n\r\n                        <ProfileDataItem editMode={editMode} dataType='Looking for a job'\r\n                                         dataValue={userProfile.lookingForAJob ? 'yes' : 'no'}\r\n                                         name='lookingForAJob' type='checkbox'/>\r\n\r\n                        <ProfileDataItem editMode={editMode} dataType='My profs skills'\r\n                                         dataValue={userProfile.lookingForAJobDescription}\r\n                                         name='lookingForAJobDescription' validators={[required]}/>\r\n\r\n                        <div><b>Contacts</b></div>\r\n                        <div className={s.contactsBlock}> {Object.keys(userProfile.contacts).map(k =>\r\n                            <ProfileDataItem editMode={editMode} dataType={k} dataValue={userProfile.contacts[k]}\r\n                                             name={'contacts.' + k} key={k}/>)}\r\n                        </div>\r\n                    </form>\r\n                )\r\n            }\r\n            }\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n\r\n// const ProfileData = ({ userProfile, setEditMode, isOwner }) => {\r\n//     return (\r\n//         <div>\r\n//             {isOwner && <button onClick={() => setEditMode(true)}>Edit Info</button>}\r\n//             <ProfileDataItem dataType={'Full name'} dataValue={userProfile.fullName}/>\r\n//             <ProfileDataItem dataType={'ID'} dataValue={userProfile.userId}/>\r\n//             <ProfileDataItem dataType={'About me'} dataValue={userProfile.aboutMe}/>\r\n//             <ProfileDataItem dataType={'Looking for a job'} dataValue={userProfile.lookingForAJob ? 'yes' : 'no'}/>\r\n//             <ProfileDataItem dataType={'My profs skills'} dataValue={userProfile.lookingForAJobDescription}/>\r\n//             <div><b>Contacts</b></div>\r\n//             <div className={s.contactsBlock}> {Object.keys(userProfile.contacts).map(k =>\r\n//                 <ProfileDataItem dataType={k} key={k} dataValue={userProfile.contacts[k]}/>)}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// constcreateDataItem(= ({ dataType, dataValue }) => (\r\n//     <div className={s.profileDataItem}>\r\n//         <div className={s.profileDataItem_type}>\r\n//             <b>{dataType + ': '}</b>\r\n//         </div>\r\n//         <div className={s.profileDataItem_value}>\r\n//             {dataValue || '-'}\r\n//         </div>\r\n//     </div>)\r\n//\r\n// const ProfileDataForm = ({ userProfile, onSubmit }) => {\r\n//     let initialValues = { ...userProfile, ...userProfile.contacts }\r\n//     return (\r\n//         <Form\r\n//             onSubmit={onSubmit}\r\n//             initialValues={initialValues}\r\n//\r\n//             render={({\r\n//                 submitError, handleSubmit, type = 'text',\r\n//                 validators = [required, maxLength(25), minLength(5)],\r\n//                 reset, form, submitting, pristine, values,\r\n//             }) => {\r\n//                 return (\r\n//                     <form onSubmit={handleSubmit} className={s.profileDataItem}>\r\n//                         <button type=\"submit\">Submit</button>\r\n//                         <div className={s.profileDataItem_type}>\r\n//                             <b>{'fullName: '}</b>\r\n//                         </div>\r\n//                         <Field\r\n//                             name={'fullName'}\r\n//                             className={s.profileDataItem_value + ' ' + (submitError ? s.submitError : s.correct)}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'Full name'}\r\n//                             validate={composeValidators(...validators)}\r\n//                         />\r\n//                         <Field\r\n//                             name={'userId'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'ID'}\r\n//                             validate={composeValidators(...validators)}\r\n//                         />\r\n//                         <Field\r\n//                             name={'aboutMe'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'About me'}\r\n//                             validate={composeValidators()}\r\n//                         />\r\n//                         <Field\r\n//                             name={'lookingForAJob'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={'checkbox'}\r\n//                             placeholder={'Looking for a job'}\r\n//                             validate={composeValidators()}\r\n//                         />\r\n//                         <Field\r\n//                             name={'lookingForAJobDescription'}\r\n//                             className={submitError ? s.submitError : s.correct}\r\n//                             component={Input}\r\n//                             type={type}\r\n//                             placeholder={'My profs skills'}\r\n//                             validate={composeValidators()}\r\n//                         />\r\n//\r\n//                         <div><b>Contacts</b></div>\r\n//                         <div className={s.contactsBlock}>\r\n//                             {Object.keys(userProfile.contacts).map(k =>\r\n//                                 <Field key={k}\r\n//                                        name={'contacts.' + k}\r\n//                                        className={submitError ? s.submitError : s.correct}\r\n//                                        component={Input}\r\n//                                        type={type}\r\n//                                        placeholder={k}\r\n//                                        validate={composeValidators()}/>)}\r\n//                         </div>\r\n//                     </form>\r\n//                 )\r\n//             }\r\n//             }\r\n//         />\r\n//\r\n//     )\r\n// }\r\n","import {profileAPI} from '../api/api'\r\nimport {toggleFetching} from './appReducer'\r\nimport {PhotosType, PostType, UserProfileType} from \"../types/types\";\r\n\r\n\r\n/* Actions types */\r\n\r\nconst ADD_POST = 'profilePage/ADD_POST'\r\nconst DELETE_POST = 'profilePage/DELETE_POST'\r\nconst SET_USER_PROFILE_DATA = 'profilePage/SET_USER_PROFILE_DATA'\r\nconst SET_STATUS = 'profilePage/SET_STATUS'\r\nconst SET_PROFILE_PHOTO = 'profilePage/SET_PROFILE_PHOTO'\r\n\r\n\r\n/* Initial state */\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState  = {\r\n  status: '',\r\n  userProfile: {\r\n    fullName: '',\r\n    userId: 1,\r\n    aboutMe: '',\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: '',\r\n    contacts: {\r\n      github: '',\r\n      vk: '',\r\n      facebook: '',\r\n      instagram: '',\r\n      twitter: '',\r\n      website: '',\r\n      youtube: '',\r\n      mainLink: '',\r\n    },\r\n    photos:{\r\n      small:'',\r\n      large:''\r\n    }\r\n  } as UserProfileType,\r\n  postsData: [\r\n    {id: 1, message: 'Hi, how are you', likesCount: 5},\r\n    {id: 2, message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.', likesCount: 10},\r\n  ] as Array<PostType>,\r\n}\r\n\r\n\r\n/* Reducer */\r\n\r\nconst profilePageReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, {\r\n          id: state.postsData.length + 1, //id counter imitation\r\n          message: action.newPostText,\r\n          likesCount: state.postsData.length + 1  //likes counter imitation\r\n        }],\r\n      }\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData.filter(p => p.id !== action.id)],\r\n      }\r\n\r\n    case SET_USER_PROFILE_DATA:\r\n      return {\r\n        ...state,\r\n        userProfile: {\r\n          ...action.userProfile,\r\n          contacts: {...action.userProfile.contacts},\r\n          photos: {...action.userProfile.photos}\r\n        }\r\n      }\r\n\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.statusText,\r\n      }\r\n\r\n    case SET_PROFILE_PHOTO:\r\n      return {\r\n        ...state,\r\n        userProfile: {\r\n          ...state.userProfile,\r\n          photos: {...action.photos}\r\n        } as UserProfileType\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n/* Action Creators */\r\n\r\ntype AddPostACType = (newPostText: string) => {\r\n  type: typeof ADD_POST\r\n  newPostText: string\r\n}\r\nexport const addPost: AddPostACType = (newPostText) => ({type: ADD_POST, newPostText})\r\n\r\ntype DeletePostACType = (id: number) => {\r\n  type: typeof DELETE_POST\r\n  id: number\r\n}\r\nexport const deletePost: DeletePostACType = (id) => ({type: DELETE_POST, id})\r\n\r\ntype SetUserProfileDataACType = (userProfile: UserProfileType) => {\r\n  type: typeof SET_USER_PROFILE_DATA\r\n  userProfile: UserProfileType\r\n}\r\nexport const setUserProfileData: SetUserProfileDataACType = (userProfile) => ({\r\n  type: SET_USER_PROFILE_DATA,\r\n  userProfile\r\n})\r\n\r\ntype SetUserStatusACType = (statusText: string) => {\r\n  type: typeof SET_STATUS\r\n  statusText: string\r\n}\r\nexport const setUserStatus: SetUserStatusACType = (statusText) => ({type: SET_STATUS, statusText})\r\n\r\ntype SetProfilePhotoACType = (photos: PhotosType) => {\r\n  type: typeof SET_PROFILE_PHOTO\r\n  photos: PhotosType\r\n}\r\nexport const setProfilePhoto: SetProfilePhotoACType = (photos) => ({type: SET_PROFILE_PHOTO, photos})\r\n\r\n\r\n/* Thunks */\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n  toggleFetching(true)\r\n  const response = await profileAPI.getProfile(userId)\r\n  dispatch(setUserProfileData(response.data))\r\n  dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\r\n  const response = await profileAPI.getUserStatus(userId)\r\n  dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateUserStatus = (statusText: string) => async (dispatch: any) => {\r\n  try {\r\n    const response = await profileAPI.updateUserStatus(statusText)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setUserStatus(statusText))\r\n    }\r\n  } catch (error) {\r\n    // debugger\r\n    alert('Error from thank \"updateUserStatus\":' + error)\r\n  }\r\n}\r\n\r\nexport const updatePhoto = (photo: any) => async (dispatch: any) => {\r\n  toggleFetching(true)\r\n  const response = await profileAPI.updatePhoto(photo)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setProfilePhoto(response.data.data.photos))\r\n    dispatch(toggleFetching(false))\r\n  }\r\n}\r\n\r\nexport const updateProfileData = (formData: UserProfileType) => async (dispatch: any) => {\r\n  toggleFetching(true)\r\n  const response = await profileAPI.updateProfileData(formData)\r\n  // debugger\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(formData.userId))\r\n    dispatch(toggleFetching(false))\r\n  } else {\r\n\r\n    const errorsObj: { 'contacts': { [index: string]: string } } = {contacts: {}}\r\n    response.data.messages.map((message: string) => {\r\n      const errorMessage: string = message.split('->')[1].replace(')', '').toLowerCase()\r\n      errorsObj.contacts[errorMessage] = message\r\n    })\r\n    return errorsObj\r\n    // return { [FORM_ERROR]: response.data.messages[0] }\r\n  }\r\n}\r\n\r\n\r\n\r\n/* Default export */\r\n\r\nexport default profilePageReducer","// import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <img alt='ava'\r\n        className={s.avatar}\r\n        src=\"https://lwlies.com/wp-content/uploads/2017/04/avatar-2009.jpg\"\r\n      />\r\n      <div className={s.postText}>{props.message}</div>\r\n      <div>\r\n        <span>{props.likesCount} likes</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { composeValidators, maxLength, minLength, required } from '../../../../utils/validators/validators'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const postsElements = props.posts.slice(0).reverse().map(p =>\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount}/>\r\n    )\r\n    const addPost = formData => props.addPost(formData.newPostText)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            My posts\r\n            <div>\r\n                <AddPostForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={props.onSubmit}\r\n            // initialValues={{}}\r\n            render={({ handleSubmit, form, submitting, pristine, values }) => {\r\n                // debugger\r\n                return (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Field\r\n                            name='newPostText'\r\n                            component={Textarea}\r\n                            className={s.textareaBlock}\r\n                            placeholder='Enter your new post'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(25),\r\n                                minLength(5))}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={submitting}\r\n                        >\r\n                            Add post\r\n                        </button>\r\n                    </form>)\r\n            }\r\n            }\r\n        />)\r\n}\r\n\r\nexport default MyPosts\r\n","// import React from \"react\";\r\nimport { addPost } from '../../../../redux/profilePageReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = state => ({\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts)\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = ({\r\n    authId, userProfile, status, updateUserStatus, isOwner, updatePhoto, updateProfileData\r\n}) => {\r\n    // console.log('Profile - status: ', status)\r\n    // debugger\r\n    return (\r\n        <div>\r\n            <ProfileInfo className={s.profileInfoBlock}\r\n                         authId={authId}\r\n                         userProfile={userProfile}\r\n                         status={status}\r\n                         updateUserStatus={updateUserStatus}\r\n                         isOwner={isOwner}\r\n                         updatePhoto={updatePhoto}\r\n                         updateProfileData={updateProfileData}\r\n            />\r\n            <MyPostsContainer\r\n                className={s.profileInfoBlock}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport {\r\n    getUserProfile, getUserStatus, setUserProfileData, updateUserStatus, updatePhoto, updateProfileData\r\n} from '../../../redux/profilePageReducer'\r\nimport { withRouter } from 'react-router'\r\nimport { compose } from 'redux'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n\r\n// import { Redirect } from 'react-router-dom'\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile () {\r\n        // debugger\r\n        const userId = this.props.match.params.userId || this.props.authId // получаем userId из Match благодаря оборачиванию в withRouter\r\n        if (!userId) {\r\n            this.props.history.push('/login')\r\n        } else {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getUserStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshots) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render () {\r\n        // if (!this.props.match.params.userId && !this.props.userProfile.userId) { return <Redirect to='/login'/>}\r\n        return (\r\n            <div>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Profile\r\n                    authId={this.props.authId} userProfile={this.props.userProfile}\r\n                    status={this.props.status} updateUserStatus={this.props.updateUserStatus}\r\n                    isOwner={!this.props.match.params.userId || String(this.props.match.params.userId) === String(this.props.authId)}\r\n                    updatePhoto={this.props.updatePhoto}\r\n                    updateProfileData={this.props.updateProfileData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        authId: state.auth.id,\r\n        userProfile: state.profilePage.userProfile,\r\n        status: state.profilePage.status,\r\n        isFetching: state.profilePage.isFetching,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n            getUserProfile, getUserStatus,\r\n            updateUserStatus, setUserProfileData,\r\n            updatePhoto, updateProfileData,\r\n        }\r\n    ),\r\n    withRouter,\r\n)\r\n(ProfileContainer)\r\n","import { Form, Field } from 'react-final-form'\r\nimport { composeValidators, maxLength, minLength, required } from '../../../utils/validators/validators'\r\nimport { Input } from '../../common/FormsControls/FormsControls'\r\nimport React from 'react'\r\nimport s from '../Messenger/Messenger.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Login = ({ isAuth, logIn, captchaURL }) => {\r\n\r\n    // const logIn = ({ email, password, rememberMe }) => props.logIn(email, password, rememberMe)\r\n\r\n    if (isAuth) return <Redirect to='/profile'/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm logIn={logIn} captchaURL={captchaURL}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({ logIn, captchaURL }) => {\r\n    const onSubmit = ({ email, password, rememberMe, captcha }) => logIn(email, password, rememberMe=false, captcha)\r\n    return (\r\n        <Form\r\n            // className={s.correct}\r\n            onSubmit={onSubmit}\r\n            // initialValues={{}}\r\n            render={({\r\n                submitError,\r\n                handleSubmit,\r\n                reset,\r\n                form,\r\n                submitting,\r\n                pristine,\r\n                values,\r\n            }) => {\r\n\r\n                return (\r\n                    <form\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <div className={s.submitError}>\r\n                            {submitError}\r\n                        </div>\r\n                        <Field\r\n                            name='email'\r\n                            className={submitError ? s.submitError : s.correct}\r\n                            component={Input}\r\n                            placeholder='Email'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(25),\r\n                                minLength(5)\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name='password'\r\n                            className={submitError ? s.submitError : s.correct}\r\n                            placeholder='Password'\r\n                            component={Input}\r\n                            type='password'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(25),\r\n                                minLength(5))}\r\n                        />\r\n                        <label>\r\n                            <Field\r\n                                name='rememberMe'\r\n                                component={Input}\r\n                                type='checkbox'\r\n                            />\r\n                            remember me </label>\r\n                        <div>\r\n                        {captchaURL && <img src={captchaURL}/>}\r\n                        {captchaURL && <Field\r\n                            name='captcha'\r\n                            className={submitError ? s.submitError : s.correct}\r\n                            placeholder='Captcha'\r\n                            component={Input}\r\n                            type='text'\r\n                            validate={composeValidators(\r\n                                required,\r\n                                maxLength(10))}\r\n                        />}\r\n\r\n                        </div>\r\n                        <div className={s.buttonBlock}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={submitting}>\r\n                                Login\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={form.reset}\r\n                                // disabled={submitting || pristine}\r\n                            >\r\n                                Reset\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                )\r\n            }\r\n            }\r\n        />)\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n","import React from 'react'\r\nimport { logIn } from '../../../redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport Login from './Login'\r\n\r\nclass LoginContainer extends React.Component {\r\n    render () {\r\n        return (\r\n            <Login {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL\r\n})\r\nexport default connect(mapStateToProps, {logIn})(LoginContainer)\r\n\r\n\r\n","import React from 'react'\r\nimport { Switch, Redirect, Route } from 'react-router-dom'\r\nimport s from './Content.module.css'\r\nimport ProfileContainer from './Profile/ProfileContainer'\r\nimport LoginContainer from './Login/LoginContainer'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nconst MessengerContainer = React.lazy(() => import('./Messenger/MessengerContainer'))\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer'))\r\nconst News = React.lazy(() => import('./News/News'))\r\nconst Music = React.lazy(() => import('./Music/Music'))\r\nconst Settings = React.lazy(() => import('./Settings/Settings'))\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className={s.appWrapperContent}>\r\n            <div className={s.contentHeadImage}></div>\r\n            <div className={s.dynamicContent}>\r\n                <React.Suspense fallback={<Preloader/>}>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\"/>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/messenger\" render={() => <MessengerContainer/>}/>\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/news\" render={() => <News/>}/>\r\n                        <Route path=\"/music\" render={() => <Music/>}/>\r\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                        <Route path='/login' render={() => <LoginContainer/>}/>\r\n                        <Route path=\"*\" render={() => <div> 404 Not Found </div>}/>\r\n                    </Switch>\r\n                </React.Suspense>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","// import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nconst Header = props => {\r\n    // debugger\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='logo' src=\"https://templates.iqonic.design/socialv/intro/images/logo-full.png\"\r\n                 className={s.headerImg}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.login + ' '}\r\n                        <button type=\"button\" onClick={props.logOut}> LogOut</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>\r\n                        Login\r\n                    </NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { logOut } from '../../redux/authReducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render () { return <Header {...this.props}/> }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default connect(mapStateToProps, {\r\n    logOut\r\n})\r\n(HeaderContainer)\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\n// import { HashRouter } from 'react-router-dom'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Content from './components/Content/Content'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { initializeApp } from './redux/appReducer'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        alert(`unhandled error is catched: ${reason}`)\r\n        console.error(reason, promise)\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.initializeApp()\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.initialized) return <Preloader/>\r\n        return (\r\n            <BrowserRouter>\r\n            {/*<BrowserRouter basename={process.env.PUBLIC_URL}>*/}\r\n                {/*<HashRouter>*/}\r\n                <div className={s.appWrapper}>\r\n                    <div className={s.block + ' ' + s.header}><HeaderContainer/></div>\r\n                    <div className={s.block + ' ' + s.navbar}><Navbar/></div>\r\n                    <div className={s.block + ' ' + s.content}><Content/></div>\r\n                </div>\r\n                {/*</HashRouter>*/}\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    // withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n            initializeApp\r\n            // getAuthUserData,\r\n        }\r\n    )\r\n)\r\n(App)\r\n\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action:any) => {\r\n  return state;\r\n};\r\nexport default sidebarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport profilePageReducer from './profilePageReducer'\r\nimport messengerPageReducer from './messengerPageReducer'\r\nimport sidebarReducer from './sidebarReducer'\r\nimport usersPageReducer from './usersPageReducer'\r\nimport authReducer from './authReducer'\r\nimport appReducer from './appReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    messengerPage: messengerPageReducer,\r\n    usersPage: usersPageReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose    /* redux-devtools-extension */\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware) /* redux-devtools-extension */\r\n))\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './redux/redux-store'\r\nimport { Provider } from 'react-redux'\r\n\r\n// setInterval(() => { store.dispatch({ type: 'FAKE' })}, 1000)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMainBlock\":\"ProfileInfo_profileMainBlock__2mhcL\",\"profileAvatarBlock\":\"ProfileInfo_profileAvatarBlock__2oVcg\",\"profileAvatar\":\"ProfileInfo_profileAvatar__11Krx\",\"profileDataBlock\":\"ProfileInfo_profileDataBlock__2lCIC\",\"profileStatusBlock\":\"ProfileInfo_profileStatusBlock__24DQD\",\"profileDataItem\":\"ProfileInfo_profileDataItem__xfKPe\",\"profileDataItem_value\":\"ProfileInfo_profileDataItem_value__2Gs6S\",\"contactsBlock\":\"ProfileInfo_contactsBlock__91rpb\",\"profileDataItem_type\":\"ProfileInfo_profileDataItem_type__2k8vY\"};","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\n// Первый метод\r\n// const FormControl = ({input, meta, ...props}) => {\r\n//     const hasError = meta.error && meta.touched\r\n//     // debugger\r\n//     return (\r\n//         <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n//             <div>\r\n//                 {props.children}\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Textarea = props => {\r\n//     const {input, meta, ...restProps} = props\r\n//     debugger\r\n//     return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n//           }\r\n//\r\n// export const Input = props => {\r\n//     const {input, meta,  ...restProps} = props\r\n//     return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n// Второй метод\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.submitError || (meta.touched && meta.error)\r\n    return (\r\n        <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n            { hasError && <span> { meta.error || meta.submitError} </span> }\r\n            <Element {...input} {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = Element(\"textarea\")\r\nexport const Input = Element(\"input\")\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messenger_dialogs__3UwQV\",\"dialogsItems\":\"Messenger_dialogsItems__1EBxi\",\"messagesItems\":\"Messenger_messagesItems__20Dp5\",\"message\":\"Messenger_message__3fpq2\",\"newMessage\":\"Messenger_newMessage___84Py\",\"textareaBlock\":\"Messenger_textareaBlock__PARKv\",\"buttonBlock\":\"Messenger_buttonBlock__1yLvw\",\"submitError\":\"Messenger_submitError__3yqr2\"};","import {authAPI, securityAPI} from '../api/api'\r\nimport {FORM_ERROR} from 'final-form'\r\nimport {toggleFetching} from './appReducer'\r\n\r\n\r\n/* Actions types */\r\n\r\nconst SET_USER = 'auth/SET_USER'\r\nconst SET_CAPTCHA = 'auth/SET_CAPTCHA'\r\n\r\n\r\n/* Initial state */\r\n\r\nconst initialState = {\r\n  id: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isAuth: false,\r\n  captchaURL: null as string | null,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n/* Reducer */\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n\r\n    case SET_USER:\r\n    case SET_CAPTCHA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    default:\r\n      return state\r\n\r\n  }\r\n}\r\n\r\n\r\n/* Action Creators */\r\ntype PayloadSetAuthUserDataACType = {\r\n  id: number | null\r\n  email: string | null\r\n  login: string | null\r\n  isAuth: boolean\r\n  captchaURL?: string | null\r\n}\r\ntype SetAuthUserDataACType = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n  type: typeof SET_USER,\r\n  payload: PayloadSetAuthUserDataACType\r\n}\r\nexport const setAuthUserData: SetAuthUserDataACType = (id, email, login, isAuth) => ({\r\n  type: SET_USER,\r\n  payload: {id, email, login, isAuth, captchaURL: null}\r\n})\r\n\r\ntype SetCaptchaACType = (captchaURL: string) => {\r\n  type: typeof SET_CAPTCHA,\r\n  payload: { captchaURL: string }\r\n}\r\nexport const setCaptcha: SetCaptchaACType = (captchaURL) => ({type: SET_CAPTCHA, payload: {captchaURL}})\r\n\r\n\r\n/* Thunks */\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n  dispatch(toggleFetching(true))\r\n  const response = await authAPI.me()\r\n    // debugger\r\n  if (response.data.resultCode === 0) {\r\n    const {id, email, login} = response.data.data\r\n    dispatch(setAuthUserData(+id, email, login, true))\r\n  }\r\n  dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const logIn = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n  dispatch(toggleFetching(true))\r\n  const response = await authAPI.logIn(email, password, rememberMe, captcha)\r\n  dispatch(toggleFetching(false))\r\n  // debugger\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl())\r\n    }\r\n    return {[FORM_ERROR]: response.data.messages[0]}\r\n  }\r\n}\r\n\r\nexport const logOut = () => async (dispatch: any) => {\r\n  dispatch(toggleFetching(true))\r\n  const response = await authAPI.logOut()\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n  dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n  const response = await securityAPI.getCaptchaURL()\r\n  // debugger\r\n  dispatch(setCaptcha(response.data.url))\r\n}\r\n\r\n\r\n/* Default export */\r\n\r\nexport default authReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__yboJz\",\"block\":\"App_block__PeutB\",\"header\":\"App_header__2iIFd\",\"navbar\":\"App_navbar__39CPW\",\"content\":\"App_content__3zoXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1CPnx\",\"active\":\"Navbar_active__2oxIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapperContent\":\"Content_appWrapperContent__yDoLp\",\"contentHeadImage\":\"Content_contentHeadImage__3XBMn\",\"dynamicContent\":\"Content_dynamicContent__2I9rW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__WJfQt\",\"posts\":\"MyPosts_posts__2Rffb\",\"post\":\"MyPosts_post__vBcSb\",\"textareaBlock\":\"MyPosts_textareaBlock__sAX7I\",\"buttonBlock\":\"MyPosts_buttonBlock__3eRfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__334D8\",\"avatar\":\"Post_avatar__2UaWx\",\"postText\":\"Post_postText__3VQl_\",\"likesCounter\":\"Post_likesCounter__10VO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__S_AL9\",\"headerImg\":\"Header_headerImg__-IdV9\",\"loginBlock\":\"Header_loginBlock__kdbO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileStatus_statusBlock__LzKVV\",\"statusInputBlock\":\"ProfileStatus_statusInputBlock__35F80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__hjWRA\",\"error\":\"FormsControls_error__21DJK\"};","export default __webpack_public_path__ + \"static/media/defaultAvatar.031be920.png\";","/* Actions types */\r\n\r\nconst ADD_MESSAGE = 'messengerPage/ADD_MESSAGE';\r\n\r\n\r\n/* Initial state */\r\n\r\ntype InitialState = {\r\n  dialogsData: Array<{ id: number, name: string }>\r\n  messagesData: Array<{ id: number, message: string }>\r\n}\r\nconst initialState: InitialState = {\r\n  dialogsData: [\r\n    {id: 1, name: \"Dimych\"},\r\n    {id: 2, name: \"Sasha\"},\r\n    {id: 3, name: \"Viktor\"},\r\n    {id: 4, name: \"Lena\"},\r\n    {id: 5, name: \"Misha\"},\r\n    {id: 6, name: \"Egor\"},\r\n    {id: 7, name: \"Sveta\"}\r\n  ],\r\n  messagesData: [\r\n    {id: 1, message: \"Hi !!!\"},\r\n    {id: 2, message: \"How are you ?\"},\r\n    {id: 4, message: \"Yo\"},\r\n    {id: 3, message: \"Yo yo\"},\r\n    {id: 5, message: \"Yo yo yo\"}\r\n  ],\r\n};\r\n\r\n\r\n/* Reducer */\r\n\r\nconst messengerPageReducer = (state = initialState, action: any): InitialState => {\r\n  switch (action.type) {\r\n\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, {\r\n          id: state.messagesData.length + 1, //id counter imitation\r\n          message: action.newMessageText,\r\n        }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n/* Action Creators */\r\n\r\ntype AddMessageACType = (newMessageText: string) => {\r\n  type: typeof ADD_MESSAGE\r\n  newMessageText: string\r\n}\r\nexport const addMessage: AddMessageACType = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\r\n\r\n\r\n/* Default export */\r\n\r\nexport default messengerPageReducer","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => (\r\n    items.map(item =>\r\n        item[objPropName] === itemId\r\n            ? { ...item, ...newObjProps }\r\n            : item)\r\n)","import {usersAPI} from '../api/api'\r\nimport {toggleFetching} from './appReducer'\r\nimport {updateObjectInArray} from '../utils/objectHelpers'\r\nimport {UserType} from \"../types/types\";\r\n\r\nconst FOLLOW = 'usersPage/FOLLOW'\r\nconst UNFOLLOW = 'usersPage/UNFOLLOW'\r\nconst SET_USERS = 'usersPage/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'usersPage/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'usersPage/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_FOLLOWING = 'usersPage/TOGGLE_FOLLOWING'\r\n\r\n\r\n/* Initial state */\r\n\r\ntype InitialState = typeof initialState\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  totalUsersCount: 0 as number,\r\n  usersOnPage: 20 as number,\r\n  currentPage: 1 as number,\r\n  followingInProgress: [] as Array<number>, // Array of users id\r\n}\r\n\r\n\r\n/* Reducer */\r\n\r\nconst usersPageReducer = (state = initialState, action: any): InitialState => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n      }\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      }\r\n    case TOGGLE_FOLLOWING:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.following\r\n          ? [...state.followingInProgress, action.id]\r\n          : [...state.followingInProgress.filter(id => id !== action.id)]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n/* Action Creators */\r\n\r\ntype FollowACType = (userId: number) => {\r\n  type: typeof FOLLOW, userId: number\r\n}\r\nexport const followAC: FollowACType = (userId) => ({type: FOLLOW, userId})\r\n\r\ntype UnfollowACType = (userId: number) => {\r\n  type: typeof UNFOLLOW, userId: number\r\n}\r\nexport const unfollowAC: UnfollowACType = (userId) => ({type: UNFOLLOW, userId})\r\n\r\ntype SetUsersACType = (users: Array<UserType>) => {\r\n  type: typeof SET_USERS, users: Array<UserType>\r\n}\r\nexport const setUsers: SetUsersACType = (users) => ({type: SET_USERS, users})\r\n\r\ntype SetCurrentPageACType = (currentPage: number) => {\r\n  type: typeof SET_CURRENT_PAGE, currentPage: number\r\n}\r\nexport const setCurrentPage: SetCurrentPageACType = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\ntype SetTotalUsersCountACType = (totalUsersCount: number) => {\r\n  type: typeof SET_TOTAL_USERS_COUNT, totalUsersCount: number\r\n}\r\nexport const setTotalUsersCount: SetTotalUsersCountACType = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount\r\n})\r\n\r\ntype ToggleFollowingACType = (following: boolean, id: number) => {\r\n  type: typeof TOGGLE_FOLLOWING, following: boolean, id: number\r\n}\r\nexport const toggleFollowing: ToggleFollowingACType = (following, id) => ({type: TOGGLE_FOLLOWING, following, id})\r\n\r\n\r\n/* Thunks */\r\n\r\nexport const requestUsers = (usersOnPage: number, page: number) => async (dispatch: any) => {\r\n  dispatch(toggleFetching(true))\r\n  const response = await usersAPI.getUsers(usersOnPage, page)\r\n  dispatch(setUsers(response.data.items))\r\n  dispatch(setTotalUsersCount(response.data.totalCount))\r\n  dispatch(toggleFetching(false))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, APIMethod: any, actionCreator: FollowACType | UnfollowACType) => {\r\n  dispatch(toggleFollowing(true, userId)) // диспатчим в стор инфу, что начался запрос на сервер и id пользователя, по которому идет запрос\r\n  const response = await APIMethod(userId)// запускаем функцию DAL уровня\r\n  if (response.data.resultCode === 0) {  // получив ответ от сервера ... проверяем, что статус ОК\r\n    dispatch(actionCreator(userId)) // диспатчим в стор инфу что мы отписались\r\n    dispatch(toggleFollowing(false, userId)) // диспатчим в стор инфу что сейчвс к серверу идет запрос по юзеру с ID\r\n  }\r\n}\r\nexport const unfollowUser = (userId: number) => async (dispatch: any) => {\r\n  await followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowAC)\r\n}\r\nexport const followUser = (userId: number) => async (dispatch: any) => {\r\n  await followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followAC)\r\n}\r\n\r\n\r\n/* Default export */\r\n\r\nexport default usersPageReducer\r\n","export const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nexport const required = value =>\r\n    value\r\n        ? undefined\r\n        : 'Field is required'\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max\r\n        ? `Must be ${max} characters or less`\r\n        : undefined\r\n\r\nexport const minLength = min => value =>\r\n    value && (value.length < min)\r\n        ? `Must be ${min} characters or more`\r\n        : undefined\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1UWqk\"};","import {getAuthUserData} from './authReducer'\r\n\r\n\r\n/* Actions types */\r\n\r\nconst INITIALIZED_SUCCESS: string = 'app/INITIALIZED_SUCCESS'\r\nconst TOGGLE_FETCHING: string = 'app/TOGGLE_FETCHING'\r\n\r\n\r\n/* Initial state */\r\n\r\ntype InitialStateType = {\r\n  initialized: boolean\r\n  isFetching: boolean\r\n}\r\nconst initialState: InitialStateType = {\r\n  initialized: false,\r\n  isFetching: true\r\n}\r\n\r\n\r\n/* Reducer */\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    case TOGGLE_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n/* Action Creators */\r\n\r\ntype InitializeSuccessACType = () => {\r\n  type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport const initializeSuccess: InitializeSuccessACType = () => ({type: INITIALIZED_SUCCESS})\r\n\r\ntype ToggleFetchingACType = (isFetching: boolean) => {\r\n  type: typeof TOGGLE_FETCHING\r\n  isFetching: boolean\r\n}\r\nexport const toggleFetching: ToggleFetchingACType = (isFetching) => ({type: TOGGLE_FETCHING, isFetching})\r\n\r\n\r\n/* Thunks */\r\n\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n  const promise = await dispatch(getAuthUserData())\r\n  // debugger\r\n  Promise.all([promise]).then(() => dispatch(initializeSuccess()))\r\n}\r\n\r\n\r\n\r\n/* Default export */\r\n\r\nexport default appReducer\r\n"],"sourceRoot":""}