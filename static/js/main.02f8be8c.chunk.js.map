{"version":3,"sources":["api/api.js","utils/validators/validators.js","redux/authReducer.js","App.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","components/Content/Messenger/Messenger.module.css","components/Content/Content.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/common/FormsControls/FormsControls.module.css","assets/images/defaultAvatar.png","redux/messengerPageReducer.js","components/Content/Profile/ProfileInfo/ProfileInfo.module.css","utils/objectHelpers.js","redux/usersPageReducer.js","components/common/Preloader/Preloader.module.css","hoc/withAuthRedirect.js","redux/appReducer.js","components/Navbar/Navbar.jsx","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","assets/images/Spinner-1s-200px.svg","components/common/Preloader/Preloader.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","redux/profilePageReducer.js","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx","components/Content/Login/Login.jsx","components/Content/Login/LoginContainer.jsx","components/Content/Content.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","redux/sidebarReducer.js","redux/redux-store.js","index.js"],"names":["instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","usersOnPage","currentPage","get","unfollowUser","userId","delete","followUser","post","getProfile","authId","console","warn","profileAPI","getUserStatus","updateUserStatus","status","put","authAPI","me","logIn","email","password","rememberMe","logOut","composeValidators","validators","value","reduce","error","validator","undefined","required","maxLength","max","length","minLength","min","SET_USER","initialState","id","login","isAuth","isFetching","setAuthUserData","type","payload","getAuthUserData","dispatch","a","toggleFetching","response","data","resultCode","FORM_ERROR","messages","authReducer","state","action","module","exports","Element","input","meta","props","hasError","touched","className","s","formControl","Textarea","Input","ADD_MESSAGE","dialogsData","name","messagesData","message","addMessage","newMessageText","messengerPageReducer","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_FOLLOWING","FAKE","users","totalUsersCount","followingInProgress","fake","followAC","unfollowAC","setCurrentPage","toggleFollowing","following","requestUsers","page","totalCount","followUnfollowFlow","APIMethod","actionCreator","bind","usersPageReducer","followed","filter","withAuthRedirect","Component","RedirectComponent","render","to","React","connect","auth","INITIALIZED_SUCCESS","initialized","initializeApp","promise","Promise","all","then","appReducer","Navbar","nav","activeClassName","active","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","statusInputBlock","onChange","e","currentTarget","autoFocus","onBlur","statusBlock","onDoubleClick","Preloader","alt","preloader","src","ProfileInfo","userProfile","profileMainBlock","profileAvatarBlock","profileAvatar","photos","small","defaultAvatar","fullNameBlock","fullName","aboutMeBlock","aboutMe","lookingForAJobDescriptionBlock","lookingForAJobDescription","lookingForAJobBlock","lookingForAJob","contactsBlock","contactsFacebookBlock","contacts","facebook","contactsWebsiteBlock","website","contactsVkBlock","vk","contactsTwitterBlock","twitter","contactsInstagramBlock","instagram","contactsYoutubeBlock","youtube","contactsGithubBlock","github","contactsMainLinkBlock","mainLink","profileStatusBlock","ADD_POST","DELETE_POST","SET_USER_PROFILE_DATA","SET_STATUS","large","postsData","likesCount","setUserProfileData","setUserStatus","statusText","profilePageReducer","newPost","newPostText","p","Post","avatar","postText","AddPostForm","onSubmit","handleSubmit","submitting","form","pristine","values","component","textareaBlock","placeholder","validate","disabled","MyPosts","memo","postsElements","posts","slice","reverse","postsBlock","formData","addPost","profilePage","Profile","profileInfoBlock","MyPostsContainer","ProfileContainer","this","match","params","history","push","getUserProfile","compose","withRouter","LoginForm","submitError","reset","correct","buttonBlock","onClick","Login","LoginContainer","MessengerContainer","lazy","UsersContainer","News","Music","Settings","Content","appWrapperContent","contentHeadImage","dynamicContent","path","Suspense","fallback","Header","header","headerImg","loginBlock","HeaderContainer","App","appWrapper","block","navbar","content","app","sidebarReducer","reducers","combineReducers","messengerPage","usersPage","sidebar","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.02f8be8c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '05f0dc87-f93b-4a11-b796-0fb78655f73d'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (usersOnPage = 10, currentPage = 1) =>\r\n        instance.get(`users?count=${usersOnPage}&page=${currentPage}`),\r\n    unfollowUser: userId =>\r\n        instance.delete(`follow/${userId}`),\r\n    followUser: userId =>\r\n        instance.post(`follow/${userId}`, {}),\r\n    getProfile (userId, authId) {\r\n        console.warn('Obsolete method\" Please profileAPI object')\r\n        return profileAPI.getProfile(userId, authId) // Для сохранения backward compatibility ставляем возможность использовать запросы сюда\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile: userId =>\r\n        instance.get(`profile/${userId}`),\r\n    getUserStatus: userId =>\r\n        instance.get(`profile/status/${userId}`),\r\n    updateUserStatus: status =>\r\n        instance.put(`profile/status`, { status: status })\r\n}\r\n\r\nexport const authAPI = {\r\n    me: () =>\r\n        instance.get(`auth/me`),\r\n    logIn: (email, password, rememberMe = false) =>\r\n        instance.post(`auth/login`, { email, password, rememberMe }),\r\n    logOut: () =>\r\n        instance.delete(`auth/login`),\r\n}\r\n\r\n\r\n\r\n\r\n","export const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nexport const required = value =>\r\n    value\r\n        ? undefined\r\n        : 'Field is required'\r\n\r\nexport const maxLength = max => value =>\r\n    value && value.length > max\r\n        ? `Must be ${max} characters or less`\r\n        : undefined\r\n\r\nexport const minLength = min => value =>\r\n    value && (value.length < min)\r\n        ? `Must be ${min} characters or more`\r\n        : undefined\r\n\r\n","import { authAPI } from '../api/api'\r\nimport { FORM_ERROR } from 'final-form'\r\nimport { toggleFetching } from './appReducer'\r\n\r\nconst SET_USER = 'auth/SET_USER'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: true,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                // isAuth: true,\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({ type: SET_USER, payload: { id, email, login, isAuth } })\r\n\r\nexport const getAuthUserData = () => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const logIn = (email, password, rememberMe) => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await authAPI.logIn(email, password, rememberMe)\r\n    dispatch(toggleFetching(false))\r\n    if (response.data.resultCode === 0) dispatch(getAuthUserData())\r\n    else return { [FORM_ERROR]: response.data.messages[0] }\r\n}\r\n\r\nexport const logOut = () => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await authAPI.logOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport default authReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3PKr9\",\"block\":\"App_block__QnjH9\",\"header\":\"App_header__3_o6u\",\"navbar\":\"App_navbar__wo81B\",\"content\":\"App_content__zh_n7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2w_RG\",\"active\":\"Navbar_active__1Cg4L\"};","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\n// Первый метод\r\n// const FormControl = ({input, meta, ...props}) => {\r\n//     const hasError = meta.error && meta.touched\r\n//     // debugger\r\n//     return (\r\n//         <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n//             <div>\r\n//                 {props.children}\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Textarea = props => {\r\n//     const {input, meta, ...restProps} = props\r\n//     debugger\r\n//     return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n//           }\r\n//\r\n// export const Input = props => {\r\n//     const {input, meta,  ...restProps} = props\r\n//     return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n// }\r\n\r\n// Второй метод\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    // const hasError = (meta.touched && meta.error) || meta.submitError\r\n    return (\r\n        <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n            <Element {...input} {...props} />\r\n            { hasError && <span> { meta.error} </span> }\r\n            {/*{ hasError && <span> { meta.error  || meta.submitError } </span> }*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = Element(\"textarea\")\r\nexport const Input = Element(\"input\")","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messenger_dialogs__ZAK-v\",\"dialogsItems\":\"Messenger_dialogsItems__32SnW\",\"messagesItems\":\"Messenger_messagesItems__VrlWw\",\"message\":\"Messenger_message__F5ho9\",\"newMessage\":\"Messenger_newMessage__no0L-\",\"textareaBlock\":\"Messenger_textareaBlock__3F4js\",\"buttonBlock\":\"Messenger_buttonBlock__p13PJ\",\"submitError\":\"Messenger_submitError__1d5hm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapperContent\":\"Content_appWrapperContent__EV0v9\",\"contentHeadImage\":\"Content_contentHeadImage__1mX_H\",\"dynamicContent\":\"Content_dynamicContent__8Mh8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3WxEe\",\"posts\":\"MyPosts_posts__3pCHv\",\"post\":\"MyPosts_post__2gayn\",\"textareaBlock\":\"MyPosts_textareaBlock__17YF_\",\"buttonBlock\":\"MyPosts_buttonBlock__3uTWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__-KDIx\",\"avatar\":\"Post_avatar__1xu3N\",\"postText\":\"Post_postText__fpT_b\",\"likesCounter\":\"Post_likesCounter__1kTtW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1gUzD\",\"headerImg\":\"Header_headerImg__j1cfj\",\"loginBlock\":\"Header_loginBlock__3_HnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileStatus_statusBlock__3qNih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1FPlP\",\"error\":\"FormsControls_error__mOc95\"};","export default __webpack_public_path__ + \"static/media/defaultAvatar.031be920.png\";","let ADD_MESSAGE = 'messengerPage/ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n    {id: 1, name: \"Dimych\"},\r\n    {id: 2, name: \"Sasha\"},\r\n    {id: 3, name: \"Viktor\"},\r\n    {id: 4, name: \"Lena\"},\r\n    {id: 5, name: \"Misha\"},\r\n    {id: 6, name: \"Egor\"},\r\n    {id: 7, name: \"Sveta\"}\r\n  ],\r\n  messagesData: [\r\n    {id: 1, message: \"Hi !!!\"},\r\n    {id: 2, message: \"How are you ?\"},\r\n    {id: 4, message: \"Yo\"},\r\n    {id: 3, message: \"Yo yo\"},\r\n    {id: 5, message: \"Yo yo yo\"}\r\n  ],\r\n};\r\n\r\n\r\nconst messengerPageReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n\r\n     case ADD_MESSAGE:\r\n       let newMessage = {\r\n         id: state.messagesData.length + 1, //id counter imitation\r\n         message: action.newMessageText,\r\n       };\r\n       return {\r\n         ...state,\r\n         messagesData: [...state.messagesData, newMessage],\r\n       };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addMessage = newMessageText => ({type: ADD_MESSAGE, newMessageText});\r\n\r\nexport default messengerPageReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMainBlock\":\"ProfileInfo_profileMainBlock__2-Pp8\",\"profileAvatarBlock\":\"ProfileInfo_profileAvatarBlock__3o8Vj\",\"profileAvatar\":\"ProfileInfo_profileAvatar__3g_kE\",\"fullNameBlock\":\"ProfileInfo_fullNameBlock__17_ZC\",\"aboutMeBlock\":\"ProfileInfo_aboutMeBlock__aLxCt\",\"lookingForAJobDescriptionBlock\":\"ProfileInfo_lookingForAJobDescriptionBlock__2miAL\",\"lookingForAJobBlock\":\"ProfileInfo_lookingForAJobBlock__2meTQ\",\"contactsBlock\":\"ProfileInfo_contactsBlock__1obYR\",\"profileStatusBlock\":\"ProfileInfo_profileStatusBlock__ftdqt\"};","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => (\r\n    items.map(item =>\r\n        item[objPropName] === itemId\r\n            ? { ...item, ...newObjProps }\r\n            : item)\r\n)","import { usersAPI } from '../api/api'\r\nimport { toggleFetching } from './appReducer'\r\nimport { updateObjectInArray } from '../utils/objectHelpers'\r\n\r\nconst FOLLOW = 'usersPage/FOLLOW'\r\nconst UNFOLLOW = 'usersPage/UNFOLLOW'\r\nconst SET_USERS = 'usersPage/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'usersPage/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'usersPage/SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_FOLLOWING = 'usersPage/TOGGLE_FOLLOWING'\r\nconst FAKE = 'usersPage/FAKE'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    usersOnPage: 20,\r\n    currentPage: 1,\r\n    followingInProgress: [],\r\n    fake: 0,\r\n}\r\nconst usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                // users: state.users.map(u => u.id === action.userId ? { ...u, followed: false } : u)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            // console.log(action.currentPage)\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount,\r\n            }\r\n\r\n        case TOGGLE_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.following\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\r\n            }\r\n        case FAKE:\r\n            return {\r\n                ...state,\r\n                fake: state.fake + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = userId => ({ type: FOLLOW, userId })\r\nexport const unfollowAC = userId => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = users => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = totalUsersCount => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\r\nexport const toggleFollowing = (following, id) => ({ type: TOGGLE_FOLLOWING, following, id })\r\n\r\nexport const requestUsers = (usersOnPage, page) => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    const response = await usersAPI.getUsers(usersOnPage, page)\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, APIMethod, actionCreator) => {\r\n    dispatch(toggleFollowing(true, userId)) // диспатчим в стор инфу, что начался запрос на сервер и id пользователя, по которому идет запрос\r\n    const response = await APIMethod(userId)// запускаем функцию DAL уровня\r\n    if (response.data.resultCode === 0) {  // получив ответ от сервера ... проверяем, что статус ОК\r\n        dispatch(actionCreator(userId)) // диспатчим в стор инфу что мы отписались\r\n        dispatch(toggleFollowing(false, userId)) // диспатчим в стор инфу что сейчвс к серверу идет запрос по юзеру с ID\r\n    }\r\n}\r\nexport const unfollowUser = userId => async dispatch => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowAC)\r\n}\r\nexport const followUser = userId => async dispatch => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followAC)\r\n}\r\n\r\nexport default usersPageReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1sTLg\"};","import { Redirect } from 'react-router-dom'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nexport const withAuthRedirect = Component => {\r\n\r\n    class RedirectComponent extends React.Component {    // Реализация HOC через классовую компоненту\r\n        render = () =>\r\n            this.props.isAuth\r\n                ? <Component {...this.props}/>\r\n                : <Redirect to='/login'/>\r\n    }\r\n\r\n    // const RedirectComponent = props =>        // Реализация HOC через функциональную компоненту\r\n    //     props.isAuth\r\n    //         ? <Component {...props}/>\r\n    //         : <Redirect to='/login'/>\r\n\r\n    const mapStateToPropsForAuthRedirect = state => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n    return connect(mapStateToPropsForAuthRedirect)(RedirectComponent)\r\n}","import { getAuthUserData } from './authReducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\nconst TOGGLE_FETCHING = 'app/TOGGLE_FETCHING'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    isFetching: true,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeSuccess = () => ({ type: INITIALIZED_SUCCESS} )\r\nexport const toggleFetching = isFetching => ({ type: TOGGLE_FETCHING, isFetching })\r\n\r\n\r\nexport const initializeApp = () => async dispatch => {\r\n    const promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => dispatch(initializeSuccess()))\r\n}\r\n\r\n// export const autoToggleFetching = (wrappedFunction, ...args) => {\r\n//     toggleFetching(true)\r\n//     toggleFetching(false)\r\n// }\r\n\r\n\r\nexport default appReducer\r\n","// import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div><NavLink to={'/profile'} activeClassName={s.active}>Profile</NavLink></div>\r\n            <div><NavLink to={'/messenger'} activeClassName={s.active}>Messenger</NavLink></div>\r\n            <div><NavLink to={'/users'} activeClassName={s.active}>Users</NavLink></div>\r\n            <div><NavLink to={'/news'} activeClassName={s.active}>News</NavLink></div>\r\n            <div><NavLink to={'/music'} activeClassName={s.active}>Music</NavLink></div>\r\n            <div><NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink></div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react'\r\nimport s from './ProfileStatus.module.css'\r\nimport { createStore } from 'redux'\r\n\r\n/* Functional implementation with hooks */\r\nconst ProfileStatus = props => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if (props.authId === props.userId) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                editMode\r\n                    ? <div>\r\n                        <input\r\n                            className={s.statusInputBlock}\r\n                            onChange={onStatusChange}\r\n                            autoFocus={true}                                 /* автофокус на элементе */\r\n                            onBlur={deactivateEditMode}      /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст */\r\n                            value={status}\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                            <span\r\n                                className={s.statusBlock}\r\n                                onDoubleClick={activateEditMode}    /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст  */\r\n                            >\r\n                            {status || 'No status'}\r\n                            </span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatus\r\n\r\n/* Class implementation */\r\n// class ProfileStatus extends React.Component {\r\n//     state = {                           // локальный стэйт  классовой компоненты\r\n//         editMode: false,\r\n//         status: this.props.status,\r\n//     }\r\n//     activateEditMode = () => {\r\n//         if (this.props.authId === this.props.userId) {\r\n//             this.setState({           // метод Реакта изменяющий локальный стэйт классовой компоненты\r\n//                 editMode: true\r\n//             })\r\n//         }\r\n//     }\r\n//     deactivateEditMode = () => {\r\n//         this.setState({           // метод Реакта изменяющий локальный стэйт классовой компоненты\r\n//             editMode: false,\r\n//         })\r\n//         this.props.updateUserStatus(this.state.status)\r\n//     }\r\n//     onStatusChange = e => {\r\n//         this.setState({ status: e.currentTarget.value })\r\n//     }\r\n//\r\n//     componentDidUpdate (prevProps, prevState, snapshot) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render () {\r\n//         return (\r\n//             <div>\r\n//                 {this.state.editMode\r\n//                     ? <div>\r\n//                         <input\r\n//                             className={s.statusInputBlock}\r\n//                             onChange={this.onStatusChange}\r\n//                             autoFocus={true}                                 /* автофокус на элементе */\r\n//                             onBlur={this.deactivateEditMode}      /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст */\r\n//                             value={this.state.status}/>\r\n//                     </div>\r\n//                     : <div>\r\n//                         <span\r\n//                             className={s.statusBlock}\r\n//                             onDoubleClick={this.activateEditMode}    /* событие при убирании фокуса с элемента. bind - т.к. иначе теряется контекст  */\r\n//                         >\r\n//                             {this.props.status || 'No status'}\r\n//                         </span>\r\n//                     </div>\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n//\r\n// export default ProfileStatus\r\n\r\n","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.a77e97c8.svg\";","import React from 'react'\r\nimport s from './Preloader.module.css'\r\nimport preloader from '../../../assets/images/Spinner-1s-200px.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img alt='preloader' className={s.preloader} src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport defaultAvatar from '../../../../assets/images/defaultAvatar.png'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\r\nimport React from 'react'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\n\r\nconst ProfileInfo = props => {\r\n    // console.log('ProfileInfo - status: ', props.status)\r\n\r\n    if(!props.userProfile.userId) {\r\n        return <Preloader  />\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileMainBlock}>\r\n            <div className={s.profileAvatarBlock}>\r\n                <img\r\n\r\n                    className={s.profileAvatar}\r\n                    alt='userAvatar'\r\n                    src={props.userProfile.photos.small ? props.userProfile.photos.small : defaultAvatar}/>\r\n            </div>\r\n            <div className={s.fullNameBlock}>{props.userProfile.fullName}<br/>{props.userProfile.userId}</div>\r\n            <div className={s.aboutMeBlock}>{props.userProfile.aboutMe}</div>\r\n            <div className={s.lookingForAJobDescriptionBlock}>{props.userProfile.lookingForAJobDescription}</div>\r\n            <div className={s.lookingForAJobBlock}>{props.userProfile.lookingForAJob}</div>\r\n            <div className={s.contactsBlock}>\r\n                <div className={s.contactsFacebookBlock}>{props.userProfile.contacts.facebook}</div>\r\n                <div className={s.contactsWebsiteBlock}>{props.userProfile.contacts.website}</div>\r\n                <div className={s.contactsVkBlock}>{props.userProfile.contacts.vk}</div>\r\n                <div className={s.contactsTwitterBlock}>{props.userProfile.contacts.twitter}</div>\r\n                <div className={s.contactsInstagramBlock}>{props.userProfile.contacts.instagram}</div>\r\n                <div className={s.contactsYoutubeBlock}>{props.userProfile.contacts.youtube}</div>\r\n                <div className={s.contactsGithubBlock}>{props.userProfile.contacts.github}</div>\r\n                <div className={s.contactsMainLinkBlock}>{props.userProfile.contacts.mainLink}</div>\r\n            </div>\r\n            <div className={s.profileStatusBlock}>\r\n                <ProfileStatus\r\n                    authId={props.authId}\r\n                    userId={props.userProfile.userId}\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import { profileAPI } from '../api/api'\r\nimport { toggleFetching } from './appReducer'\r\n\r\nconst ADD_POST = 'profilePage/ADD_POST'\r\nconst DELETE_POST = 'profilePage/DELETE_POST'\r\nconst SET_USER_PROFILE_DATA = 'profilePage/SET_USER_PROFILE_DATA'\r\nconst SET_STATUS = 'profilePage/SET_STATUS'\r\n\r\nlet initialState = {\r\n    status: '',\r\n    userProfile: {\r\n        userId: null,\r\n        lookingForAJob: null,\r\n        lookingForAJobDescription: null,\r\n        fullName: null,\r\n        contacts: {\r\n            github: null,\r\n            vk: null,\r\n            facebook: null,\r\n            instagram: null,\r\n            twitter: null,\r\n            website: null,\r\n            youtube: null,\r\n            mainLink: null,\r\n        },\r\n        photos: {\r\n            small: null,\r\n            large: null,\r\n        }\r\n    },\r\n    postsData: [\r\n        { id: 1, message: 'Hi, how are you', likesCount: 5 },\r\n        { id: 2, message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit.', likesCount: 10 },\r\n    ],\r\n    // isFetching: true,\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.postsData.length + 1, //id counter imitation\r\n                message: action.newPostText,\r\n                likesCount: state.postsData.length + 1  //likes counter imitation\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData.filter(p => p.id != action.id)],\r\n            }\r\n\r\n        case SET_USER_PROFILE_DATA:\r\n            return {\r\n                ...state,\r\n                userProfile: {\r\n                    ...action.userProfile,\r\n                    contacts: { ...action.userProfile.contacts },\r\n                    photos: { ...action.userProfile.photos },\r\n                },\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.statusText,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = newPostText => ({ type: ADD_POST, newPostText })\r\nexport const deletePost = id => ({ type: DELETE_POST, id })\r\nexport const setUserProfileData = userProfile => ({ type: SET_USER_PROFILE_DATA, userProfile })\r\nexport const setUserStatus = statusText => ({ type: SET_STATUS, statusText })\r\n\r\nexport const getUserProfile = userId => async dispatch => {\r\n    toggleFetching(true)\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileData(response.data))\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const getUserStatus = userId => async dispatch => {\r\n    const response = await profileAPI.getUserStatus(userId)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateUserStatus = statusText => async dispatch => {\r\n    const response = await profileAPI.updateUserStatus(statusText)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(statusText))\r\n    }\r\n}\r\n\r\nexport default profilePageReducer\r\n","// import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <img alt='ava'\r\n        className={s.avatar}\r\n        src=\"https://lwlies.com/wp-content/uploads/2017/04/avatar-2009.jpg\"\r\n      />\r\n      <div className={s.postText}>{props.message}</div>\r\n      <div>\r\n        <span>{props.likesCount} likes</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Form, Field } from 'react-final-form'\r\n\r\nimport { composeValidators, maxLength, minLength, required } from '../../../../utils/validators/validators'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\r\n\r\nconst AddPostForm = props =>\r\n    <Form\r\n        onSubmit={props.onSubmit}\r\n        // initialValues={{}}\r\n        render={({ handleSubmit, form, submitting, pristine, values }) => {\r\n            // debugger\r\n            return (\r\n            <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name='newPostText'\r\n                    component={Textarea}\r\n                    className={s.textareaBlock}\r\n                    placeholder='Enter your new post'\r\n                    validate={composeValidators(\r\n                        required,\r\n                        maxLength(25),\r\n                        minLength(5))}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                >\r\n                    Add post\r\n                </button>\r\n            </form>)\r\n        }\r\n        }\r\n    />\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    const postsElements = props.posts.slice(0).reverse().map(p =>\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount}/>\r\n    )\r\n\r\n    const addPost = formData => props.addPost(formData.newPostText)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            My posts\r\n            <div>\r\n                <AddPostForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts\r\n","// import React from \"react\";\r\nimport { addPost } from '../../../../redux/profilePageReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = state => ({\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts)\r\n\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = props => {\r\n    // console.log('Profile - status: ', props.status)\r\n  return (\r\n    <div>\r\n      <ProfileInfo className={s.profileInfoBlock}\r\n                   authId={props.authId}\r\n                   userProfile={props.userProfile}\r\n                   status={props.status}\r\n                   updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <MyPostsContainer\r\n          className={s.profileInfoBlock}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getUserStatus, setUserProfileData, updateUserStatus } from '../../../redux/profilePageReducer'\r\nimport { withRouter } from 'react-router'\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount () {\r\n        const userId = this.props.match.params.userId || this.props.authId // получаем userId из Match благодаря оборачиванию в withRouter\r\n        if (!userId) this.props.history.push('/login')\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n        // debugger\r\n    }\r\n\r\n    render () {\r\n        // debugger\r\n\r\n        // if(!(this.props.match.params.userId || this.props.userProfile.userId)) return <Redirect to='/login'/>\r\n\r\n        return (\r\n\r\n            <div>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Profile\r\n                    authId={this.props.authId}\r\n                    userProfile={this.props.userProfile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        authId: state.auth.id,\r\n        userProfile: state.profilePage.userProfile,\r\n        status: state.profilePage.status,\r\n        isFetching: state.profilePage.isFetching,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n            getUserProfile, getUserStatus,\r\n            updateUserStatus, setUserProfileData\r\n        }\r\n        ),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)\r\n(ProfileContainer)\r\n","import { Form, Field } from 'react-final-form'\r\nimport { composeValidators, maxLength, minLength, required } from '../../../utils/validators/validators'\r\nimport { Input } from '../../common/FormsControls/FormsControls'\r\nimport React from 'react'\r\nimport s from '../Messenger/Messenger.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst LoginForm = ({ onSubmit }) =>\r\n    <Form\r\n        // className={s.correct}\r\n        onSubmit={onSubmit}\r\n        // initialValues={{}}\r\n        render={({\r\n            submitError,\r\n            handleSubmit,\r\n            reset,\r\n            form,\r\n            submitting,\r\n            pristine,\r\n            values,\r\n        }) => {\r\n            // form.reset()\r\n            // debugger\r\n            return (\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <div>\r\n                        {submitError}\r\n                    </div>\r\n                    <Field\r\n                        name='email'\r\n                        className={submitError ? s.submitError : s.correct}\r\n\r\n                        component={Input}\r\n                        placeholder='Email'\r\n                        validate={composeValidators(\r\n                            required,\r\n                            maxLength(25),\r\n                            minLength(5)\r\n                        )}\r\n                    />\r\n                    <Field\r\n                        name='password'\r\n                        className={submitError ? s.submitError : s.correct}\r\n\r\n                        placeholder='Password'\r\n                        component={Input}\r\n                        type='password'\r\n                        validate={composeValidators(\r\n                            required,\r\n                            maxLength(25),\r\n                            minLength(5))}\r\n                    />\r\n                    <div>\r\n                        <Field\r\n                            name='rememberMe'\r\n                            component={Input}\r\n                            type='checkbox'\r\n                        />\r\n                        remember me\r\n                    </div>\r\n                    <div className={s.buttonBlock}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={submitting || pristine}>\r\n                            Login\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={form.reset}\r\n                            disabled={submitting || pristine}\r\n                        >\r\n                            Reset\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n        }\r\n    />\r\n\r\nconst Login = props => {\r\n    const logIn = ({ email, password, rememberMe }) => props.logIn(email, password, rememberMe)\r\n\r\n    if (props.isAuth) return <Redirect to='/profile'/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={logIn}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n","import React from 'react'\r\nimport { logIn } from '../../../redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport Login from './Login'\r\n\r\nclass LoginContainer extends React.Component {\r\n    render () {\r\n        return (\r\n            <Login {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default connect(mapStateToProps, {logIn})(LoginContainer)\r\n\r\n\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport s from './Content.module.css'\r\nimport ProfileContainer from './Profile/ProfileContainer'\r\nimport LoginContainer from './Login/LoginContainer'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nconst MessengerContainer = React.lazy(() => import('./Messenger/MessengerContainer'))\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer'))\r\nconst News = React.lazy(() => import('./News/News'))\r\nconst Music = React.lazy(() => import('./Music/Music'))\r\nconst Settings = React.lazy(() => import('./Settings/Settings'))\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className={s.appWrapperContent}>\r\n            <div className={s.contentHeadImage}></div>\r\n            <div className={s.dynamicContent}>\r\n                <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                <React.Suspense fallback={<Preloader/>}>\r\n                    <Route path=\"/messenger\" render={() => <MessengerContainer/>}/>\r\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/news\" render={() => <News/>}/>\r\n                    <Route path=\"/music\" render={() => <Music/>}/>\r\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                    <Route path='/login' render={() => <LoginContainer/>}/>\r\n                </React.Suspense>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","// import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nconst Header = props => {\r\n    // debugger\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='logo' src=\"https://templates.iqonic.design/socialv/intro/images/logo-full.png\"\r\n                 className={s.headerImg}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.login + ' '}\r\n                        <button type=\"button\" onClick={props.logOut}> LogOut</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>\r\n                        Login\r\n                    </NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { logOut } from '../../redux/authReducer'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render () {\r\n        // debugger\r\n\r\n        return (\r\n            <div>\r\n                {/*{this.props.isFetching ? <Preloader/> : null}*/}\r\n                <Header {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // id: state.auth.id,\r\n    // email: state.auth.email,\r\n    // isFetching: state.auth.isFetching,\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default connect(mapStateToProps, {\r\n    logOut\r\n})\r\n(HeaderContainer)\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\n// import { BrowserRouter } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Content from './components/Content/Content'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { initializeApp } from './redux/appReducer'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount () {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.initialized) return <Preloader />\r\n        // debugger\r\n        return (\r\n            // <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <HashRouter>\r\n                <div className={s.appWrapper}>\r\n                    <d1iv className={s.block + ' ' + s.header}><HeaderContainer/></d1iv>\r\n                    <div className={s.block + ' ' + s.navbar}><Navbar/></div>\r\n                    <div className={s.block + ' ' + s.content}><Content/></div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    // withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n            initializeApp\r\n            // getAuthUserData,\r\n        }\r\n    )\r\n)\r\n(App)\r\n\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default sidebarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport profilePageReducer from './profilePageReducer'\r\nimport messengerPageReducer from './messengerPageReducer'\r\nimport sidebarReducer from './sidebarReducer'\r\nimport usersPageReducer from './usersPageReducer'\r\nimport authReducer from './authReducer'\r\nimport appReducer from './appReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    messengerPage: messengerPageReducer,\r\n    usersPage: usersPageReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose    /* redux-devtools-extension */\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware) /* redux-devtools-extension */\r\n))\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './redux/redux-store'\r\nimport { Provider } from 'react-redux'\r\n\r\n// setInterval(() => { store.dispatch({ type: 'FAKE' })}, 1000)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals()\r\n"],"sourceRoot":""}